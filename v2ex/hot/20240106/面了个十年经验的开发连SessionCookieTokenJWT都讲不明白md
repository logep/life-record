### 面了个十年经验的开发, 连 Session/Cookie/Token/JWT 都讲不明白



---------------------------------------------------

那是另一个我🐶

---------------------------------------------------

大多数人都讲不清，别以为自己看过一点就好像很懂似的

---------------------------------------------------

@aijam 比你懂

---------------------------------------------------

@wangkun025 经验浅的话还情有可原

---------------------------------------------------

同不会，忘了 Session 、Token 、JWT  这一堆啥区别了。
哎，学了东西过段时间就忘，真就喂饭吃了。

---------------------------------------------------

你也讲讲面的是什么价的岗位的吧，别光说年限。我刚参加工作的时候有个大哥比我大了十几岁，和我做一样的岗位，还总被批评。所以我早早就建立了“多年没有什么长进才是普通人的正常情况”这种观念。

---------------------------------------------------

愁人，上周学过啥还没上周吃过啥记得清楚，记忆力越来越差了。

---------------------------------------------------

计算机领域里面，除了涉及到数学或物理理论的，大部分技术理解（不是实现）起来并不难，因此说不清楚的，基本是从来没有从已知出发思考过这些技术的运作原理

---------------------------------------------------

@Vegetable 对方要价两三万，给不起再见

---------------------------------------------------

因为大部分人用框架，不考虑框架背后的基本原理

---------------------------------------------------

@agagega 如果自己动手实现过，自然可以对答如流。一直使用现成的方案，从未思考过背后实现，才会如此。

---------------------------------------------------

@rabbbit 学了没机会用吗

---------------------------------------------------

@estk 是的

---------------------------------------------------

我前端，我这用的 token ，axios 封装好了 get post put delete 直接拿来用好几年没动过了，也就偶尔有段时间折腾过 SSO 单点登录。
所以刚才问我的话我真达不上（去复习了现在会了），不过要两三万还不复习可能有点过分吧。

---------------------------------------------------

“这是好事儿啊”      说明虽然卷但是很多人没竞争力。

---------------------------------------------------

那你就多说说呗，他怎么讲不明白了

---------------------------------------------------

Session：在客户端那边存个 id ，对应的信息放在服务端
JWT：信息全存在客户端，但避免他改
Cookie：客户端通常拿来存上面俩东西的地方

Token 是真不知道该怎么说，问了下 ChatGPT 常见的 Token 形式，大部分见过，但让我背肯定背不出来

---------------------------------------------------

@rabbbit 面的是后端

---------------------------------------------------

@Puteulanus token 就是一个签名算法生成的字符串

---------------------------------------------------

@iseki 讲不明白各自的长短，为什么用 A 而不是 B

---------------------------------------------------

我讲的清楚 建议让我来

---------------------------------------------------

@Plutooo 下次要换点题目了

---------------------------------------------------

我都是让面试者直接上机操作写当前业务模块

---------------------------------------------------

可是你这列表里，抽象的和具象的东西都混在一起了啊
@Nazz

---------------------------------------------------

这个怎么讲，的确会存在的现象，每个人接触的东西是不太一样的，即便在自己看起来很简单的东西，没做过的话就真的是不会

像我之前面 fullstack engineer ，被问到前端跨域问题的时候，这个相信已经是很常见的八股文了，但是我是直接回答我大概知道它是什么现象，但是我没有处理过类似的问题，所以不太清楚解决方案

再者，我之前也有同事工作经验很丰富的，但有次一块看一个问题，发现他还不知道 maven 是可以配置到环境变量里的，一直用的是 IDE 里的，但丝毫不影响他写业务写的比我更好，实现需求又好又快

---------------------------------------------------

@Nazz 你确定 Token 是这个意思？

---------------------------------------------------

您有您的理解，别人有别人的理解，我建议 手撕算法考察编程熟练度 + chatgpt 使用熟练度
您问这点玩意问 gpt 3 分钟解决了

以鱼考人，不如以渔考人

---------------------------------------------------

@di94sh hh ，现在已经离不开 ChatGPT 了

---------------------------------------------------

jwt vs cookie/session 争议本来就比较大，现在有公论？

---------------------------------------------------

问这些干嘛? 知道是用来作甚的不就行了吗?

本质就是个 id

---------------------------------------------------

这种帖子+二次元头像 让人生理不适

---------------------------------------------------

自己实现 Session/Cookie/Token/JWT 这是准备直接从根上写一套这些实现原理吗

---------------------------------------------------

虽说你可能比他懂，但是碰到点别人的盲区就发到网上的人大概率也懂不到哪里去

---------------------------------------------------

session：具体信息存服务端，用于检索的 sessionId 通过 cookie 下发，cookie 不可用时可以随 URL 参数，服务端掌握生命周期。
cookie：存客户端，按 path 确定是否要回传。可用于保存客户端的一些偏好设置。
token：对信息的签名，不保存。主要是为了防止信息被篡改。但是实践中，也会有人把 session 和 token 混为一谈。
jwt：应该本身就是对用户信息的加密，服务端可自行解密。缺点是数据会比较长。

---------------------------------------------------

另外你不会没搞懂 signature 和 token 的意思把？

token 在英语里是一个很泛指的词

---------------------------------------------------

@Puteulanus 也可以是一个随机字符串，不放 Cookie 头里自动带过来就成

---------------------------------------------------

@yingdashi 二次元头像……是不是有点人身攻击了

---------------------------------------------------

@charge1boy 我已经写完了。新开发的系统，包含 C 端用户登录，开放接口以及 OAuth2 授权。

---------------------------------------------------

@Hurriance 我觉得这些东西是后端基操，没问 chan 的 n 种姿势，手撕 runtime map 源码

---------------------------------------------------

@Leviathann 资深开发圈子里有公论了

---------------------------------------------------

@yingdashi 那你点进来找骂？

---------------------------------------------------

讲真  你要是提前说要面这个, 我去背一下 2 小时....   

我本人都实现过,还画过流程图. 但是不去背很多细节想不起来..

---------------------------------------------------

这不是基础吗？😂 大家都不应该对实现原理信手拈来，闭着眼睛手搓吗？

---------------------------------------------------

不知道讲清楚是什么水平，不过说这里面的七八成说个大概应该是一年以上经验都能搞定的。

---------------------------------------------------

我就是上手干活都会，让我用嘴说残废。

---------------------------------------------------

不得不说，有时候还是需要刻意练习，反复回忆，看看有没卡住的点，不能单纯将看过作为知道。

---------------------------------------------------

@Seria 我也觉得是后端开发基操

---------------------------------------------------

我从业 25 年，脱稿的话，也讲不明白。得看着材料讲，最好有谷歌。

---------------------------------------------------

@IvanLi127 本来就不是什么高深的东西, 也不是工作中永远用不到的八股

---------------------------------------------------

大概理解这样对吗？
Cookie Authentication 将数据存在客户端 Cookie ，缺点：跨域、CSRF 、大小限制
Session Authentication 数据存在服务器，生成一个 Session ID 存客户端。Session ID 存在不一定非要存 Cookie 里，存 LocalStorage 也一样。缺点：占服务器资源
Token Authentication 根据用户信息生成一个 Token 令牌存客户端，服务器通过验证 Token 来确定用户身份。缺点：验证有开销，被盗不好处理
JWT 是一种 Token Authentication 实现

---------------------------------------------------

没有资料的话，让他背估计没有背全。如果有 google 的话，他干起活来，比会背这些的，效率可能高 10x 以上。

---------------------------------------------------

@Nazz #41 二次元是这样的，懂点皮毛以为自己多牛逼坏了，看动画片脑子看不正常

---------------------------------------------------

有很多应届生，把这些八股文背的非常遛，不过实际干起活来，效率则是太低下了，这钟情况见的太多了。

---------------------------------------------------

@rabbbit 讲的不全对. 狭义的 JWT 指的是无状态的那种, 服务端无法主动吊销 Token; 广义的 JWT 依赖了存储, 是传统 Session/Cookie 的蹩脚的替代品. 单纯只说 Token 就很灵活自主了, 讲讲我的做法: 客户端使用 JWT, Payload 只带 user_id, 服务端自行实现 Session 存储, 以 user_id 作为 key, value 包含 jwt_secret, 没有 refresh_token 之类的东西.

---------------------------------------------------

@yingdashi 煞笔一个, 到处找存在感, 不喜欢的话题别点进来啊

---------------------------------------------------

@buf1024 万物皆可八股

---------------------------------------------------

@Nazz #55 就是恶心你这种二次元，出生东西，骂的就是你这种睿智。

---------------------------------------------------

@klo424 面试就靠一张嘴

---------------------------------------------------

@Nazz 我现在这家公司面试面我的时候就直接上机实操，没怎么问技术。

---------------------------------------------------

@klo424 我是远程面的，不方便写

---------------------------------------------------

@aijam 二次元是这样的，看了 xx 动画片，找点优越感。学了 xx 技术，找点优越感。

---------------------------------------------------

一直很奇怪这种 xx 年经验的叫法，工作年限根本无法代表水平（当然也确实没什么更好的方法，就像不同公司之间的 senior 天差地别一样）。另外个人感觉这个问题就是很常识性的概念，不明白为什么这也有人将其称之为“八股文”甚至还应激了，可能确实刺中了一些 n 年经验还不如应届生的人

---------------------------------------------------

Cookie 和 JWT 还可以细说，这是具体的事物，有明确的标准。Token/Session···这东西，只能从周知角度上谈谈概念了，它本来也就是个概念，没人规定 token 一定是个字符串，也没人规定 session 就一定得是跟 PHP 里那个 session 一样的东西。

---------------------------------------------------

Cookie 和 JWT 是有比较明确定义的，但 Session/Token 是很抽象的词，依赖上下文，怎么能讲明白？

---------------------------------------------------

你要就问我 session 是什么，我就跟你讲 Web 场景下 session 是用户和系统交互的会话，是用户当前交互的上下文。嘿，我就不提存不存在服务端，怎么存，气死你。

---------------------------------------------------

我觉得能把这个讲清楚的程序员不超过 50%，甚至更少。

这里面很多东西呢，还要考虑历史一路过来。

---------------------------------------------------

@iseki 你过来我就要毙掉，怕你去老板那推销 kt

---------------------------------------------------

@Nazz 🤯🥰😁😁😁

---------------------------------------------------

@5h4nh session 就是服务端的会话信息，token 讲讲主流的一些实现方式呗

---------------------------------------------------

@iseki 任意二进制数据, hex/base64 编码一下就是字符串

---------------------------------------------------

这种概念性的东西不用说清，知道用就行了。问这个不如问 http 协议。

---------------------------------------------------

@Nazz 你说了，编码。此外如果你的问题是 token 是什么而非 Web 场景下 token 怎么实现

---------------------------------------------------

命运的齿轮有一天也会转到你身上。那个时候你会明白： 什么是重要的， 什么是稀缺经验，什么是真正有价值的。 然后你就会感叹能把这些词汇理解的这么透彻的的人居然这么便宜，哪还有什么必要思考这些。

---------------------------------------------------

各位大佬说了这么多，难道 JWT 中的 T 不就是 Token 的意思？🐶

---------------------------------------------------

工作以来一直都是 jwt….

---------------------------------------------------

曾经和 lz 一样鄙视这个鄙视那个，碰到菜逼总要怼一怼，年纪大了之后发现 把注意力多放在自己身上。高中的数学八股文在座的能记得几个.

---------------------------------------------------

有空在这里吵，不如去翻翻“圣经”

cookie & session: https://datatracker.ietf.org/doc/html/rfc6265
oauth 2.0 bearer token: https://datatracker.ietf.org/doc/html/rfc6750
jwt: https://datatracker.ietf.org/doc/html/rfc7519

---------------------------------------------------

说不明白不代表不能干活，你是要招能干活的还是会背八股文的。
会背八股文也不一定干活干的好，这就很尴尬了。

---------------------------------------------------

token 和另外 3 个根本就不在一个平面上吧……

---------------------------------------------------

没意义的问题，用这个决定面试结果只能说明是不合格的面试官
答得清楚不一定能胜任开发工作
答不清楚也不一定不能胜任
如果这个岗位是 http 身份验证专家当我没说

---------------------------------------------------

要不等 PO 主把自己认为的正确答案贴出来再来吵吧.

---------------------------------------------------

@Nazz #53 这个做法一点也体现不出你所谓的资深，更像是自己重新实现一遍 SessionID 那套玩意。而且你的面试问题也非常体现你的水平，脱离具体场景的问题非常干瘪，纯属八股。

---------------------------------------------------

招聘前端也问过这类问题，即便很努力的引导，能回答的也不多。
之所以会问的目的很简单，筛选出能比别人多思考一步的人就好

---------------------------------------------------

这是最基础的问题。应该很容易就回答了。

---------------------------------------------------

都有点逆天，尤其是这种二次元头像

---------------------------------------------------

没意义的问题，既然问这些招进去的就是做 crud 的，会用框架就行了。收收你那个优越感，要是真要刨根问底，数论你学过吗？你会证明背后用的非对称算法是“安全”的吗？

当然你招人有标准，但发这种帖子让人生理不适。

基于你今天在 v 站活跃度排名 144 闲得慌，我建议你还是去找个女朋友吧，别发这种无聊的帖子浪费大家时间！

---------------------------------------------------

@hardto 什么是有意义的问题，给点例子

---------------------------------------------------

@Kumo31 没想到问个基础问题这么多人破防

---------------------------------------------------

@Cola98 一切国内开发者维护的开源项目都不要用，二次元浓度很高

---------------------------------------------------

最怕面试官了，你们出的好多面试题我都不知道该怎么回答啊，怎么办

同意 @iseki 的

---------------------------------------------------

稍大点的项目，都有自己的 IAM 平台。上述实现方法无非的 header 的序列化协议

---------------------------------------------------

一直只做服务器开发的话, 这确实很少接触吧. 而且这几个玩意用的时候几分钟不就搞明白了.

---------------------------------------------------

有些人连自己要招什么样的人都不知道，就知道瞎 bb
99%以上情况，只有在要做技术选型或者造轮子的情况下，才需要深入了解所谓的原理（包括 spec ）

基础知识千千万，要卡人还不容易，不就一句话的事。不合适就合适，何必面了还逼逼

---------------------------------------------------

我一个非后端的理解。由于 http 的无状态，要维护登录后访问其他请求能找到对应的登录状态。
Session ，一个 session id 跟用户 id 的表。主要后端去维护。好处就是服务器维护比较安全，坏处就是服务器压力大，分布式麻烦，一台机器挂了，该机器 session 都得重写登录。
Cookie ，好处就是减少服务器压力，但是不安全。
Token ，我得理解不会把 token 跟用户具体状态联系，只是对一个资源是否权限
JWT ，后端也不需要存储，但是下发了没法撤销

---------------------------------------------------

有没有可能是忘了，毕竟工作 10 年了，谁也不可能保证每块知识都能记得，时间长没做相关业务忘记也正常吧。你们看中这块知识不要他不就完了没必要网上吐槽吧？

---------------------------------------------------

工作 1 年多的时候写过一篇文章讲过这方面的问题，我回忆一下：
cookie 是 http 层面的东西，浏览器专门开辟了一块空间来存放 cookie
session ，这个得看是宏观还是微观的，宏观的就是会话，学过计算机网络的应该都知道里面有个 session 概念，微观的讲就是服务器开辟一块内存存储一些本次会话相关的信息；为啥需要开辟一块内存存储会话信息，因为 http 是无状态的，所以需要搞一块地方来记录当前用户的主要信息，一般是这几个：用户名、用户 ID 、登录过期时间
有了 session ，就有 sessionID 来标识这块信息是属于谁的，那么 sessionID 存哪里，最方便的存浏览器 cookie 里面呗，实在不行你放在 header 里面也行，这都无所谓，只要发请求的时候带上就行
服务器收到用户 cookie 里面的 sessionID ，找到哪个 session ，就知道你是谁了，也能知道你是不是登录的，而不用你每次发账号密码了，相当于你去食堂吃饭，带饭卡就行了，不用每次带身份证、户口本、学生证等等有效证件

token 这个太抽象了，啥玩意都叫 token ，你要强行说 sessionID 是 token ，它也行；但是一般情况下，token 说的 jwt 生成的那一串字符串，这个字符串通过签名算法，把用户当前登录的主要信息都编码到里面了，一般是这几个：用户名、用户 ID 、登录过期时间，这玩意存哪里也随意，你放 cookie 也行，放 header 也行，真的无所谓，发请求的时候带上就行

jwt 和 sessionID 比较起来，其实就是时间换空间，session 需要服务器存储，jwt 不需要服务器存储，但是得每次解码，所以有的大公司光 session 就需要专门的服务器
但是 jwt 也有缺点，一旦生成之后，服务器这边没法主动让它失效，如果是 session 的话，把那块 session 清空就行了，如果你想把当前生成的 jwt 失效，还得搞个名单存下来哪些 jwt 是失效的，又是一块存储
反正都是个鉴权设计流程，各有优劣

---------------------------------------------------

不自己手写相关逻辑的话，通常不会去了解各种细节
即便了解过，也通常写完一次就忘干净了，不复习还真是很难讲出来

---------------------------------------------------

原批收收味

---------------------------------------------------

@Nazz 你维护了吗？

---------------------------------------------------

这帖子看尿了
如果要求几万工资工作的十年经验开发者，连这几样东西最简的区别都说不清，那拒绝是完全没问题的
还是说我高估了 V2EX 各位的水平。。。。

---------------------------------------------------

@BeautifulSoap 我也感觉有点不可思议...

---------------------------------------------------

脉脉也刷到楼主发的，每个人都有知识盲区，他可能是单纯没有准备，没必要太纠结这个吧，是什么让你这么吃惊和诧异呢？
https://i.imgur.com/61hPIko.jpg

---------------------------------------------------

@Cola98 维护了一些个人项目

---------------------------------------------------

OP 不要不懂强行装懂。

我们先假设这是讨论准确的定义而不是某些地方怎么使用的，某些人，比如 OP 这种人，怎么认为的。

96 楼写的很准确清晰了，不过我认为有几个地方不对。

1. session 的定义这个文档很清晰： https://developer.mozilla.org/en-US/docs/Web/HTTP/Session ，不过这个文档最开始那里的定义，也是有一点问题的，我们先假设不考虑 HTTP 1.1 的 HTTP pipelining 或者甚至 HTTP 2/3 的 stream 之类的事情。
session 跟 sessionID ，用户，认证之类的没什么关系，它就是一次 http 会话，从 UA 发出一个 HTTP request 到 server 返回 HTTP response 到 UA ，就是一个 session 。

2. token 很模糊是因为在英文里它真的有很多意思，计算机里不同领域也对 token 定义过不同的意义，下面是几个跟计算机感觉比较相关的，并不全是 HTTP 的，编译器里面也有用 token 代表最小可分割元素：
    A. a thing serving as a visible or tangible representation of a fact, quality, feeling, etc.
    B. a word or object conferring authority on or serving to authenticate the speaker or holder.
    C. the smallest meaningful unit of information in a sequence of data for a compiler.
    D. a sequence of bits passed continuously between nodes in a fixed order and enabling a node to transmit information.
在 HTTP 的世界里，没有人准确定义过 token ，不过从以上定义大概有 ABD 几种。

---

JWT 直接看 RFC 就行： https://datatracker.ietf.org/doc/html/rfc7519
Cookie 也直接看 RFC 就行： https://datatracker.ietf.org/doc/html/rfc6265

---------------------------------------------------

@lesismal 送分题，我不信你不会

---------------------------------------------------

我觉得做 web 开发方向，无论是后端还是前端，这个都搞不清楚的话，实在是有点说不过去

---------------------------------------------------

好的问题：常用的用户认证手段有哪些？分别有什么优劣之处？

坏的问题：看标题。

---------------------------------------------------

我也就记得大概的流程，细节还是要看文档的。

---------------------------------------------------

@angrylid 问过了，为什么选择 JWT 而不是 session/cookie 或 token

---------------------------------------------------

@phrack 感谢指正，不过我回答里面也提到了，session 这个东西宏观来说就是计算机网络里面的会话，微观来说就是服务器开辟的那块存储，存用户这个登录流程中必要信息的，token 这个东西确实被滥用了

---------------------------------------------------

@zzzzzzggggggg 我在考虑该说 96 楼说的不对的地方，还是 96 楼说的不清楚的地方，选了不对^_^，因为我在气头上，被 OP 这半吊子给气到了。

---------------------------------------------------

@phrack 没事，理解，大家以讨论为主

---------------------------------------------------

@phrack 笑了，能断网手撸都不懂，要把 RFC 背出来才算

---------------------------------------------------

没毛病 我工作两三年的时候就已经看过 django 的 session 实现 也看过 flask 的 cookie 实现 还看过 drf 的 token 实现 还看过 flask-jwt-extend 实现 招我招我

---------------------------------------------------

@johnsona 下次该换题了🤣

---------------------------------------------------

乐

---------------------------------------------------

@Nazz #115 😠 十年的开发就是因为换题寒了心开摆的

---------------------------------------------------

@Nazz 对对对，你撸的就是标准

---------------------------------------------------

@phrack 不敢动, 你才是懂王

---------------------------------------------------

@phrack 不敢当, 你才是懂王

---------------------------------------------------

我面试会结合对方简历问问题，大多数是开放性问题。标准类的或者其他有明确答案可以找的我觉得工作中可以直接找资料，如果以后工作中真经常用得到用一点时间看一遍也就记住了。我更在乎对方的思维方式、沟通能力和学习能力。这三点有一个硬伤以后工作合作上都会让我无比痛苦。

---------------------------------------------------

@sneezry 送分题都答不好, 感觉动手能力差, 缺乏思考

---------------------------------------------------

这些东西需要用的时候，查查资料基本都能说清楚。
但是，一个稍微大点的项目，鉴权什么的估计写好之后改动的机会基本不多，就连随后起的小项目都是拿以前的东西改一改直接用。
纯粹的面试八股，如果技术栈过多，没复习到那就只能说是用进废退，除非你招的岗位是研究这个方向的，否则意义真不大。

---------------------------------------------------

@Nazz #122 看对送分的定义吧，对于搞 Spring Cloud 的我来说我更关心分布式系统多个 replica 下 Session 如何正常工作，那么从我的角度看 Session Affinity 就是送分题。但如果我面试的人没有相关背景我也不会问这个问题，毕竟这种东西一两个小时也就看完了。对某个技术方案是否了解从来不是一个程序员的价值所在，因为技术是在发展的，任何一个技术都会在未来被淘汰。

---------------------------------------------------

我也工作快 9 年了，好久没跳槽背八股了，甚至 http 相关都模糊了，入行至今没有一家公司让我搞过任何 http 相关的东西，一直在后端自己玩 tcp 和 dpdk ，让楼主来面我，估计得在全网挂的更狠，连 http 都说不清的大龄 loser

---------------------------------------------------

原来脉脉上面发帖的人是你

---------------------------------------------------

@Nazz token 也不一定是签名算法，uuid 也是一种 token 只是不安全，token 是很泛化的

---------------------------------------------------

@Bingchunmoli 前面我补充过了

---------------------------------------------------

我也十年了 現在就反思

---------------------------------------------------

@Nazz 
token 就是一个签名算法生成的字符串

token 可以是任意随机字符串，只要这个字符串你有办法验证
你这个回答说的是 JWT

---------------------------------------------------

@qiubinren 岗位是 go web

---------------------------------------------------

@mhycy 我在前面补充过了，回答太多了你没看到

---------------------------------------------------

严格说 JWT 是 token 的一种
但优点在于只要服务器有密钥且能解密客户端发来的 jwt 数据
那么可以在脱离数据库的情况下校验请求合法
不需要依赖 redis 或者后端的数据库
在分布式高并发的时候能降低瓶颈与同步压力

这才是正确答案

---------------------------------------------------

@sneezry 网景那个年代就有 Session/Cookie 了，Session/Token 不过是其变种，想淘汰这套技术除非人类灭绝不上网了

---------------------------------------------------

op 是脉脉发了来 v2 ，不知道下一步会去啥地方发

---------------------------------------------------

OP 发这个贴子，并且在 v2 和脉脉都发了一遍，说明你对“受试人从业多年，却说不清楚这些概念之间的区别”一事比较诧异。

但是，每个人的经历都不同，接触的东西也都不一样。你了解某项技术自然很好，却也没必要因为了解这项技术而有所谓的优越感。这个行业里的大多数技术都不是难到无法掌握的级别，如果受试人因为不了解这些概念而不符合你的岗位要求，那么你拒绝受试人即可，没有必要对受试人加以讥讽。
 
说到底，大部分人都只是利用技术求生。空闲时间里要么给自己充充电，要么去学习更多的技术，还是不要到处散播这种负面的情绪了吧 :)

---------------------------------------------------

我感觉是人家不屑于回答，后端基础的概念，十年经验不可能不知道。
JWT 这是应该实现，面试为啥面这种东西？

---------------------------------------------------

我就是楼主说的那个十年经验的开发,不知道为啥楼主火气那么大,我感觉我说清楚了呀,还是你没听懂啊,一定要背得跟八股文一样的才是懂吗？ 退一步来说，即使我不懂，懂这个有什么优越感呢？

---------------------------------------------------

我觉得你应该贴出来你的面试者怎么回答的

---------------------------------------------------

现代社会谁不是混口饭吃，99%的人都是混日子的，难不成你是那 1%推动人类文明发展的？要是那 1%都像你这么想，剩下 99%的人早灭绝了。

---------------------------------------------------

你爸爸妈妈回家是先左脚进门还是右脚进门。答不上来只能说明记性不太好，不代表解决问题的能力不行。可以说不适合你的要求，但也没必要这样。

---------------------------------------------------

没撒问题啊，要加 2 、3w 且面试高级开发的话，这都不清楚的话有点过了，

---------------------------------------------------

对于高级开发的话，这种问题都算简单的了。我面试别人，过完基础之后就是问解决方案和设计模式了。我觉得都要问，至少证明你学习了的，对得起 2 、3w 的工资。

---------------------------------------------------

根本不就在一个维度,说啥呢，就这知识点，花几分钟就会的东西，成了炫耀的资本，好笑

---------------------------------------------------

https://github.com/beyondye/ENPHP/tree/master/application/system/auth

这是我几年前写的，

让我现在回答，也说不清

---------------------------------------------------

这……无法评价，如果我去面试，被问这个问题，应该当场就走了，这面试官水平也太臭了，这四个词居然放在一个维度讨论

---------------------------------------------------

说不出来就说不出来被有必要在多个地方发帖吐槽么

---------------------------------------------------

你爸爸妈妈回家是先左脚进门还是右脚进门。答不上来只能说明记性不太好，不代表解决问题的能力不行。可以说不适合你的要求，但也没必要这样。

---------------------------------------------------

没撒问题啊，要加 2 、3w 且面试高级开发的话，这都不清楚的话有点过了，

---------------------------------------------------

对于高级开发的话，这种问题都算简单的了。我面试别人，过完基础之后就是问解决方案和设计模式了。我觉得都要问，至少证明你学习了的，对得起 2 、3w 的工资。

---------------------------------------------------

根本不就在一个维度,说啥呢，就这知识点，花几分钟就会的东西，成了炫耀的资本，好笑

---------------------------------------------------

https://github.com/beyondye/ENPHP/tree/master/application/system/auth

这是我几年前写的，

让我现在回答，也说不清

---------------------------------------------------

这……无法评价，如果我去面试，被问这个问题，应该当场就走了，这面试官水平也太臭了，这四个词居然放在一个维度讨论

---------------------------------------------------

说不出来就说不出来被有必要在多个地方发帖吐槽么

---------------------------------------------------

你爸爸妈妈回家是先左脚进门还是右脚进门。答不上来只能说明记性不太好，不代表解决问题的能力不行。可以说不适合你的要求，但也没必要这样。

---------------------------------------------------

没撒问题啊，要加 2 、3w 且面试高级开发的话，这都不清楚的话有点过了，

---------------------------------------------------

对于高级开发的话，这种问题都算简单的了。我面试别人，过完基础之后就是问解决方案和设计模式了。我觉得都要问，至少证明你学习了的，对得起 2 、3w 的工资。

---------------------------------------------------

根本不就在一个维度,说啥呢，就这知识点，花几分钟就会的东西，成了炫耀的资本，好笑

---------------------------------------------------

https://github.com/beyondye/ENPHP/tree/master/application/system/auth

这是我几年前写的，

让我现在回答，也说不清

---------------------------------------------------

这……无法评价，如果我去面试，被问这个问题，应该当场就走了，这面试官水平也太臭了，这四个词居然放在一个维度讨论

---------------------------------------------------

说不出来就说不出来被有必要在多个地方发帖吐槽么

