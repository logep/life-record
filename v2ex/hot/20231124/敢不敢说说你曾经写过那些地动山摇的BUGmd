### 敢不敢说说你曾经写过那些地动山摇的 BUG？

先说一个我自己的：周五临上线前随口一提要不改一个很久之前的问题吧。我没多想，随手就改了调了之前外包团队的一个函数。细节也没看。（甩锅的时候就用上外包团队了）
结果第三天后周日平台就炸裂般的 High 了：
假如这是『原神』：你可以理解成基本上大部分玩家都用上了 诺言之剑
假如这是『直播』：你可以给你最爱小姐姐随意送 超级火箭、一起看个海、宇宙一号，听她们用颤抖的声音叫爸爸
假如这个『淘宝』：而又赶了直播卖楼，这可以让你圆了人生梦想当上包租公。一边看着满屋的钱口中念念有词的说道：走开，你们这些讨厌的钞票
当时的老板听说之后都诡异的笑了。后来辛苦拉了几位同事、DBA 、运维等一起来善后。也再次感谢所有的同学。
不能说太多细节了，捂脸逃～

---------------------------------------------------

if i=1:
    ...

学弟写的 Python ，一大帮人找了一晚上的 bug ，愣是没想到这个问题，然后被我 1 秒定位

---------------------------------------------------

刚来公司，写了个全局变量
结果导致 A 用户下到了 B 用户的文件

---------------------------------------------------

交易策略，把买卖方向写反了，当天给市场 K 线拉出了一个长条。

---------------------------------------------------

同事写过，以前安卓的设备号随便获取的，我们的账户跟这个设备号强绑定，后面小米率先发力，导致获取到的设备号都一样，账户数据全特么乱了，关键还是跟用户隐私相关....

---------------------------------------------------

价格订阅错了，A 的价格显示为 B 的价格。导致验收环境撤回，推迟上线 1 个月

---------------------------------------------------

v 站没有匿名，我不敢说。

---------------------------------------------------

field filed
il8n i18n

---------------------------------------------------

很久很久以前，lua 有一个变量忘记写 local 了，导致线上数据错乱了

---------------------------------------------------

memcached 雪崩，一个月炸一次

---------------------------------------------------

虽然不是 bug 但比 bug 还蠢，至今记得..
远古时代，托管到机房的一台 win server ，rdp 过去新增一个 ip
需要在网络连接-属性里面去设置，一顿点点点之后没有生效，想着先禁用网络适配器再启用就能生效，果断的点了禁用...
至此，rdp 断开连接、机房晚上无人值守

---------------------------------------------------

一个直播 app,  我重构了主播端, 上线后一切正常
直到有一天, 所有使用 ios 客户端的主播都间接性闪退. 排查下来只要某个安卓客户端的用户进入这个主播的直播间, 就会让主播端闪退, 这个用户进一个闪一个, 乐此不疲, 给平台上所有 ios 设备的主播都干倒了

---------------------------------------------------

@wu00 #10 这事我也干过…… 不过还好是托管在本地 IDC 打电话摇人自己开车去现场了

---------------------------------------------------

今日快乐的源泉

---------------------------------------------------

rm bin/* 敲成了 rm /bin/*
线上测试环境，CTO 两次来暗示我问题挺严重的，我装听不懂。

---------------------------------------------------

@hiphooray 我司代码规范要求这种条件对比的时候将常量放在等号前面（虽然是 C 语言），你这个比如写个 if 1=i ，编译的时候直接就给你报错了

---------------------------------------------------

没写过什么大 BUG..
一个内部系统 DB 要加个从库，运维没空我就自己干，ssh 到主库上去搬配置文件
同时在要加从库的机器上装 mysql ，装完发现版本不对
然后中途被聊天软件打断回了两句话
切回来输入了个 yum uninstall
结果 tab 错了，把主库卸了....
赶紧把 vip 切到从库上面去
从那之后这种活再也不自己干了

---------------------------------------------------

15 年，上班第一年，有一个需求，明天给客户一句祝福，7 天不重样，然后内容写死在本地，我只保存了前六天的，第七天，所有用户上 APP 都崩溃，因为角标越界了。印象深刻。

---------------------------------------------------

说个让我怀疑了很久才看出来的 BUG （当然不是啥大问题），之前教同学基本前端入门的时候，我和另外几个人盯着了半天才看出来

```html
<ol>
<li>item 1<li>
<li>item 2<li>
<li>item 3<li>
</ol>
```

---------------------------------------------------

@hiphooray 真是比较隐藏的 BUG
@cnoder 看到 C 同学也能下到 B 的文件了
@ivvei 你这算乌龙指吗？
@BeyondBouds 同病相怜啊
@bzw875 关于钱的问题验收撤回幸运+1
@ttgo 别怕，说。如果被绑架了你就眨眨眼
@c3de3f21 第一行可以理解，第二行这是钓鱼网站吧
@knightdf 被批斗了吗？
@opengps 是做游戏的吗？
@wu00 哈哈，不赖你，思维过程完美闭环。这是惯性思维的锅
@wujichao 这个厉害了，走那要清场。这一般是厅级以上干部的待遇
@lingex 还好是线上测试，不是线上。装傻给你 100 分
@pkoukk 还好有从库，救你一命

---------------------------------------------------

@hiphooray 所以 1=i 这种写法就很有必要。

---------------------------------------------------

把 main 写成 mian 。。。

---------------------------------------------------

清除数据库然后把表删了

---------------------------------------------------

@hiphooray 用 JS 就不会有这种问题 不连敲三个等号浑身不舒服🤣

---------------------------------------------------

全角空格天下第一

---------------------------------------------------

有一次，“被迫”跑路
具体逻辑我就是在一个原有 dubbo 服务接口里面返回对象 DTO 里面加了个字段
我自己 java 服务调用是正常的，我觉得加字段这种应该不需要特别排查吧，应该不会报错
然而发布生产的时候，一堆 php 服务调用报错，全部都是 dubbo 服务解析出错，紧急回滚，后面才知道是序列化协议问题（特殊字符带表情），java 服务调用是没问题的
领导不懂技术，全给我一个人背锅，丑陋的嘴脸看着都恶心，我气不过，直接当场说不干了，跑路
ps：之前就有倒霉蛋遇到过，背锅，被骂，然后用 base64 转了，序列化方式还是没改，我后面问他为啥不改，他说改出问题还要被骂，改好了又没奖励，领导不懂技术真可怕

---------------------------------------------------

14 年左右吧。小公司，服务器后端自己一个人。晚上 11 点上线测试完了。回家了，凌晨 3 点左右打电话说客户端有一个什么问题无法解决。让服务这边改一下。然后 3 点开车回去改了。就上线了。。。。6 点吃完早餐回来，再看了一下改的地方。发现，我为了测试简单，把 CDKEY 的验证逻辑直接跳过了。。。任意输入都可能通过 CDKEY 验证。。。不过好的是还有一个 CDKEY 类型，类型不一样发东西不一样。

一身冷汗，赶快再次上线。

---------------------------------------------------

@lingex #14 我删东西都是 rm -rf ./xxxx 打死不敢从/开始写地址

---------------------------------------------------

mian

---------------------------------------------------

@hiphooray 这种写法其实应该不允许. 比如 go 里面这么写会编译报错.

---------------------------------------------------

刚工作时要给内部使用的基础平台加个功能，我当时也是头铁，直接写了半个多月，改了非常多地方一次性推到远端，dev 上测试没发现问题直接就提发布申请走流程了
刚部署上去就有人问怎么不能跑任务了，当时就一激灵，上去测试发现点了没反应，赶紧定位发现请求数据有问题（具体啥情况记不太清了），就找运维的人看，各种什么抓包、网络什么的都查了没发现问题，让我回滚试试
结果 revert 问题还在，reset 又推不上去，强制推都不行，刚工作直接干红温了
后来还是带我那大哥帮我折腾了一番 回滚回去好了，查代码没发现问题，重新部署又正常了😅

---------------------------------------------------

某电商网，写了个前端导致 iOS app 用户无法支付

---------------------------------------------------

倒不是自己写的

rm -rf / xxxx   多了亿个空格

---------------------------------------------------

@liaopen123 还好是第一年，要不然年终奖就没了
@zsh2517 不说有问题，眼光一扫就过了
@fields 发现字符顺序错误引起的问题很多，特别是这种无法被编译的问题
@NoobNoob030 这个是想跑路的节奏啊
@leeyuzhe 这也是一个隐藏款
@boboaiya3 唉，这种常见修改触发的 BUG 还不处理就是用来坑队友的吧
@KING754 这应该是前世的五百次擦肩而过换来了今生的一次回眸
@grance 看上去好像也不违和

---------------------------------------------------

更新余额没带用户 id

---------------------------------------------------

if ( a & b || c) 本来想表达 if (a & (b || c) ) ，只要有操作就会给用户发站内信，幸亏发现的快，不过一两个小时发出去了几百条了。

---------------------------------------------------

说个狠的，不是我，是我同事。后台服务 delete * from XXX,where 条件给漏掉了，核心用户订单主表

---------------------------------------------------

接手了一个外包的 Java 项目，因为对 Java 和 Java 日期类了解不够，发现某字段出现了时区问题，导致日期偏移了 8 小时，影响了几百万数据

---------------------------------------------------

又想起来一个，上家公司临走之前让我把一个巨离谱的 Excel 做成 web 展示，合并单元格看得我头都大了。后来没办法用原生 HTML 全部写死交差走人。在我走了没多久前同事就来问我那个页面在哪，要做成动态展示数据的……

---------------------------------------------------

一不小心删了线上几亿数据（ 0.0 ）

---------------------------------------------------

@wu00 我也干过类似的事情，点之前还觉得自己很精灵

---------------------------------------------------

写过一个 bug ，客户缴费了 1600w ， 系统只入帐了 16w 。

---------------------------------------------------

想起了 bumblebee 的 bug

https://github.com/MrMEEE/bumblebee-Old-and-abbandoned/issues/123

---------------------------------------------------

@ivvei 

没上模拟盘。。。。

---------------------------------------------------

这帖子治好了我的抑郁症，笑死我了

---------------------------------------------------

顺手把一个切线程的东西给拿掉了，没想到有线程问题，导致客户看不到数据了……然后客服那几天被疯狂轰炸；

发誓，以后连代码格式化都不做了。避免问题。

不清楚的万万不能乱动。

---------------------------------------------------

好多年前，上游临时换接口，周末 8 点的时候来公司修改（我死活想不起来为什么是这个时间点投产）。

充值金额在几个 jsp 之间跳转，跳着跳着把我给跳迷糊了（前任留下的代码，amount 一会儿格式化成分传递，一会儿格式化成元显示）。最后把接口单位为分的 amount 误当成元，又×100 送给后台。后果就是客戶只要消费 1 元，卡里就能充进去实际价值 100 的天然气。

还好这个 bug 只停留了 10-15 分钟。第六感预警，赶紧修复掉了。后来看日志，幸好没有幸运儿发现...

---------------------------------------------------

不是 bug ，但是是运维上的操作
负责过一个巨大的物联网平台，之前老版本的代码中，负责处理设备上下线的消息队列叫 device.connect 和 device.disconnect
新版本换成 device.online 和 device.offline 之后旧队列就没用了，但是存了一堆的历史消息
于是看着旧队列不爽的我就在某个版本的 release note 里写让运维把 device.online 和 device.disconnect 队列给删掉
运维小哥华丽丽地也给删了，然后客户第二天疯狂 call 公司为啥设备全部下线？

万幸当时是个周六，而且我和运维都在加班，一个小时内就把问题定位而且修复了

---------------------------------------------------

@ho121 想起了近期某二游客户端卸载时候清空用户硬盘的问题

---------------------------------------------------

一个中文逗号。
开发时是英文的，调试没问题。
准备发布的时候又想格式化一下，可能是按错什么键删了个英文的逗号，然后输入了一个中文逗号，格式完美。提交代码，告诉运维要上线了（那会儿还是替换文件的形式进行部署），下班。
第二天中午，公司老总过来给客户道歉。

---------------------------------------------------

@fields #define mian main ？

---------------------------------------------------

写了个红中麻将的听牌算法，用的是查表法，我把整个表用字典套字典的方式来实现二叉树，结果导致服务器爆内存了。🙂

---------------------------------------------------

连接池饥饿导致线上卡住

---------------------------------------------------

@wujichao #11 原因是啥？

---------------------------------------------------

8 年前，在 UCloud 上跑数据，不小心也不知道触发什么官方 Bug 了，结果是把 UCloud 的虚拟交换机干高负载了
然后官方主动反向沟通：你们在干啥……

---------------------------------------------------

1. 某设备出现故障 bug ，远程调试失败，导致同事不得不奔赴当时还在打仗的叙利亚
2. 调试某设备，由于 bug ，发射功率超限，把一颗卫星的一个转发器干沉默了一会儿
3. 另外同事的，写了个 bug ，半夜被拉上直升机上船维修

---------------------------------------------------

刚毕业的时候改 app 里的 [关于我们] ，结果把公司大佬们的介绍人名资料和头像映射错了🤣

---------------------------------------------------

属性名 id 改 ID ，忘了做映射，导致进入商品详情没 id 取不到内容。。

---------------------------------------------------

emmm...经常自己防火墙防住了自己..

---------------------------------------------------

生产手机的时候给一大批机器写了相同的 wifi 地址

---------------------------------------------------

抽奖规则，没走缓存。  
导致抽奖服务器 mysql 顶不住。 
虽然不是我写的 bug

---------------------------------------------------

精彩精彩

---------------------------------------------------

活动有个条件，包含和不包含的逻辑，当时的代码

if(inList.contains(id)) || !notInList.contains(id)){
    // TODO
}


上线之后，没有配置不包含的条件，notInList 为空，导致所有的产品都参与活动了 https://i.imgur.com/2ZZSapE.png

---------------------------------------------------

导购卖东西，发激励。激励规则很多，其中有个产品线，但是没有维护产品线的商品会匹配所有激励规则，导致超发 3w 块钱

---------------------------------------------------

以前游戏都是套壳，有一次更新游戏服务端，没清缓存，结果把游戏 A 的资源文件更新到游戏 B 了，B 玩家发现自己有了游戏 A 的道具，简直惊呆了

---------------------------------------------------

我虽不是技术，但是以前做 P2P 业务的时候，有个技术同学写了一个 bug ，导致用户提现会出现重复的情况。。
那会我们是自己的后台系统调支付公司的代付接口，所以自己系统的 bug 导致支付公司多付出去了几千万。。一个个打电话去追回来，还好最后资损比较小，那会公司钱也赚的多，不在意。但是问题是真的很严重。后来我支付公司账户上再也不敢放那么多钱了。

---------------------------------------------------

update 没加 where 条件，改了整张表的数据

---------------------------------------------------

1. 客户端定时来服务器拉数据，但访问服务器的地址是可配置的，有次新开服务器用了内网的地址，直接发布过去了，于是客户端修改了下次请求的地址成了内网地址，再也连不回来了
2. 领取奖励忘了改数据库，无限领取奖励

---------------------------------------------------

@lingex #14 所以我习惯使用./开头

---------------------------------------------------

@yangxiaopeipei #50 还不是 一个同事写的 node package.json 自己改的。。。

---------------------------------------------------

刚刚毕业

把抽奖逻辑放在前端 被人撸羊毛了 

损失了好多钥匙挂件

---------------------------------------------------

写 Laravel ，连的生产环境，直接 php artisan migrate:refresh 了，最后靠阿里云的 RDS 自动备份恢复了

---------------------------------------------------

笑死我了，有种看知乎的感觉了

---------------------------------------------------

曾经在 XX 银行工作，因为后台接口的客户五项信息是可写的， 我的一个 Bug 把 137 个男客户的性别改成了女人，
如果他们去办卡的话。。。。。

---------------------------------------------------

rm -rf /* 删除了准生产环境东西 服务器还能连接 但是东西都没有 还好我机智 说我想重新搭建一遍

---------------------------------------------------

游戏项目 if 判断错误 弄得可以无限刷金币 直接没了 10%的流水 关键是 sb 玩家还把金币都花了 没法追回

---------------------------------------------------

刚刚毕业的时候，维护一个长沙市级政府平台，很多商户往这个平台上报数据，写了个功能删除数据,用的 mysql ，然后 where 条件加少了，把线上数据都删了，幸好 dba 连夜加班恢复，后面写 delete 语句都唯唯诺诺了

---------------------------------------------------

经理让我清理脏数据，忘了加范围，直接改了全表

---------------------------------------------------

以前使用 CMS 给客户做了一个新闻站，让一个新来的小伙做。客户反馈用了一段时间后，首页很慢，心想才 10 来个栏目，就算不用缓存也不会慢啊，结果一个小伙写的逻辑，每个栏目取前 10 条新闻。伪代码如下

list1 = select * from news where 栏目 = xxx
count = 0
for l in list1
   count ++

c = min(10, count)

list2 = select * from news where 栏目 = xxx
result = new list
count = 0
for l in list2
  count ++
  if (count <= c)
     result.add(l)
return result

我只能感叹一句，我 X ，逻辑毫无破绽

---------------------------------------------------

@masterclock #55 你这活，一般人还干不了

---------------------------------------------------

@cnhongwei 逻辑鬼才

---------------------------------------------------

来晚了

早年给 CMCC 做外包，更新了一个系统服务后 忘了启动，导致从那天下午到晚上发现，全市所有移动手机都没收到 10086 下发的短信

---------------------------------------------------

更新 iOS 消息推送后端程序，用的是多线程，用 Redis 做的缓存池。
消息推送成功以后，没有及时清除，导致推送程序以为还没推送成功。
结果就是 1w 多台设备，每台设备收到 1000 多个推送，中午午睡的时候被人打电话叫起来，上去关了程序，要不然每台设备能收到 1w 多个推送。

---------------------------------------------------

@wu00 #10 哈哈哈笑死，我也干过这事儿

---------------------------------------------------

@cnhongwei #78 哈哈哈，就问你能不能用～

---------------------------------------------------

内部系统，sql 的 where 条件

我自作聪明的，如果任何条件都没填，就去掉 where 。。。

然后这帮天杀的，还真的啥过滤都给取消了，然后大表查询就卡死了。。

---------------------------------------------------

上市公司，刚入职 2 周，前面那个人的离职的时候改了一半，我入职就接着他的 git 分支继续写，有个页面他只改了一半，需求变了，不用改了，结果我也没发现，测试也没发现，提现页面直接白屏打不开了。

下午 3 点上线，一直到第二天早上 10 点发现有客户投诉，我定位了下发现这个页面不是我改的，一看提交记录是我入职之前就提交了，最后喜提一个 T0 级别的 BUG ，导致很多客户以为公司跑路了，影响很大，领导写了整整 3 页的报告给上面交代我的问题，导致后面我每次上线领导都特别嘱咐测试多测测我的问题，最好能全部回归一下

最后公司效益不好，裁员的时候我第一个被裁，我至今想起来也感觉不公平，真想给之前那个前端来一锤子

---------------------------------------------------

@ivvei 我同事也干过这事,  交易软件, 做多按钮实际是做空, 做空按钮实际是做多, 还好那个涉及的品类持仓成本很高, 交易不活跃, 没客户发现
后来我们强制发版, 改回来了

---------------------------------------------------

再说一个同事的，之前一家公司是做灰产的，也没测试，代码都非常随意，一天晚上更新一个关于广告开关的问题，结果同事改完的时候开关没打开，导致一晚上广告没展示，也没人发现，看了下流水损失一辆宝马吧，因为老板开的宝马（当时灰产流水非常高）
但影响不大，因为当时项目非常赚钱，一辆宝马老板也不怎么在乎。。

---------------------------------------------------

从业十几年来唯一的一次线上 bug ，也不算地动山摇
大概是七八年前的事，就是搜索页面只能加载第一页数据，无法加载后面页数
还好上线第一页就发现了，做了紧急修复，当季度绩效也没有因此打低
自那之后，开发完任何功能后都会乖乖自测一遍

---------------------------------------------------

搞客户端，某个查询触发频率过高，差点给机房干爆（ 400W 在线）

---------------------------------------------------

@yzbythesea 怎么做到的？

---------------------------------------------------

想起了才开始写 cloujure 的时候 partition/partition-all  每次数据随机丢失/丢失个数随机/顺序随机

---------------------------------------------------

当年没确认好就加了一个约定好的参数，结果全站视频全线崩溃，都看不了了。

---------------------------------------------------

@wujichao #11 我也想知道，原因是啥

---------------------------------------------------

rm -rf /

---------------------------------------------------

提交代码时忘记删除调试代码了，内容为每轮循环都会在固定位置保存一个数据文件

---------------------------------------------------

不算 BUG ，算是失误，把一个商家的用户资产数据（可以理解为储值卡余额数据）迁移到另一个商家系统里去了。然后商家用了一个发现他的顾客储值卡的钱怎么多了那么多，然后为了修复这些数据，熬了两个通宵，差点被开除

---------------------------------------------------

刚毕业一年的时候，用 python 写脚本，本来想遍历 list 的，伪代码如下
```
for i in [a1,a2,a3]:
  os.system('reboot {}*'.format(i))
```
然后我传了一个字符串，遍历成这个字符串的每一个字母了
导致我测试脚本效果时候，直接就误重启一堆测试机器 ，故障了，万幸这是测试环境
（还是强类型好...

---------------------------------------------------

文件转码目录配置到了系统文件目录
转码成功后自动删除临时目录，直接给系统文件一起删了，约等于删库。。。还好没正式上线

---------------------------------------------------

前前前公司曾经出过一次惊天大 bug ，但不是我，而是一个后端同事搞的
电商公司，本来有个小活动，发 50 块无门槛优惠券，限制了名额只有几十个
结果后端代码没限制好，发出去几千张之后才发现问题
直接惊动老板，老板只能亲自拍板：发出去的优惠券都不会追回，避免影响口碑
然后这个哥们肯定是开除了，没让他赔偿

---------------------------------------------------

省公务员考试报名系统
10 年前，没有云服务，机房自己部署自己压力测试，同事为了在机房快速删掉每次压测的几十万条数据，写了个没有任何令牌和参数的 /clear 方法。
我没有审查代码，导致生产环境把这个方法部署了上去。
第一年没事，第二年被恶意扫描命中了这个方法，导致生产环境考生数据全部丢失（备份是一天前的）
直接导致省公务考试报名暂停两天天，我 2 天没睡觉通过操作日志写脚本恢复丢失的数据（ aop 切了所有考生提交的 url 和参数，入操作日志审计表）

从此以后不碰政治性强的面向公众的政府业务（那几天，天天和人社厅厅长开会，还被条子各种怀疑和调查）

---------------------------------------------------

来晚了，说两个遇到的故障
1. 做国外业务，货币单位触发遗留 bug 搞错了，当天超发了一大笔钱，幸好及时追回，否则资损够雇几百个程序员干活了
2. 超过十万+核的 K8S 集群，所有 master 被下线，在重装前被发现，及时恢复，影响所有服务的变更，如果被重装了估计得跑路了

---------------------------------------------------

@wu00 我也干过

---------------------------------------------------

用户注册的一个流程少加了一个判断，导致走这个流程注册的用户都无法注册成功，万幸是没多少人用，要不然真 gg 了

---------------------------------------------------

遇到几次了，总有同事写 select * from table ，然后运行一段时间后，数据量上来了，只要执行到这里系统就挂。

---------------------------------------------------

线上改 bug ，把同步改成并发来缩短处理时间，本地测完匆忙上线，结果 go 并发没控制好，疯狂重复发送游戏道具。

调用第三方接口的 mock 判断有问题，在灰度环境刷新用户数据，把 mock 数据给所有线上用户刷上了。

---------------------------------------------------

这就是做前端唯一的好处了 好像还真没有过于严重的 bug..

---------------------------------------------------

测试环境调一个外部 api 不要钱，写的每秒更新，但是上线要收费了，按调用次数收费，线上也是每秒调用一次，没了几千块

---------------------------------------------------

没影响别人。自己做量化更换策略直接上实盘，止损方向打反了，当晚碰到极端行情，爆仓了

---------------------------------------------------

刚毕业去的第一家公司，某天下午我 leader 当我面在生产环境执行 sql ，
直接一个 where 1=1 的 update ，唰一下，很快啊，七百多万数据全更新了，变成七百多万一模一样数据
我当时看我 leader 汗就下来了
于是那天我被拉着还原数据搞到十一点

---------------------------------------------------

1.一个领取游戏 cdkey 的功能，限制没做好，被刷了价值几百万的 cdkey
2.游戏发红包功能，小额的 5 块被刷了将近 2w ，持续了将近两天才发现

---------------------------------------------------

@zsh2517 #18 没看懂 这段有啥问题吗

---------------------------------------------------

@boboaiya3 这个锅，你背无疑呀。而且不是锅，却是你有问题。对外的东西 ，加，减字段怎么能想当然没事呢。

---------------------------------------------------

@cnhongwei 突然想到 GTA5 启动加载

---------------------------------------------------

https://www.v2ex.com/t/994554 我还发了个帖子标识震惊。

---------------------------------------------------

update limit 1 前手滑了个分号然后没看到 ctrl enter 提交了

---------------------------------------------------

我写的一个 bug ，但是触发的时候离职了，是同事善后的。 游戏里面退款之后要注销账号，注销账号要清除好友关系。传参的时候传错了，导致把要注销的账号的好友的好友给清除了。

---------------------------------------------------

线上用了 redis keys 把集群搞崩了~~

---------------------------------------------------

调用了一个外网的 API 判断手机的 IP 地址所属
测试的时候一直正常
后来我请婚假了
婚假期间游戏上线, 同时 API 被墙
导致所有玩家要卡 50 秒左右才能进入游戏
还没有人发现这个 Bug, 以为是 SDK 的问题
后来我回来就改了
被一个测试人员发现
被狠狠地怼了一顿

---------------------------------------------------

@wu00 #10 我也干过这个事

---------------------------------------------------

while True ，然后一直往池子里面新增线程数，最后卡死了，排查了好几天哈哈哈哈哈

---------------------------------------------------

@hiphooray 没有用 IDE 吧。不然直接就会提示错误了。

---------------------------------------------------

@zsh2517 好家伙 我不是选中底色变了我都没看出来

---------------------------------------------------

17 年实习的时候，我维护一个微信收银系统，在 review 代码的时候发现一个前人写的 bug 。

大致逻辑是扫描微信付款码后 60s 没有收款成功的话，则订单接口收银屏幕上提示订单支付失败，如果已经失败的订单收到付款则调用退款接口。然后我就发现有个 if 判断写反了，导致已经失败的订单没有调用到微信退款接口，所以我就修复了这个 bug ，也和 leader 反馈了。

结果第二天晚上，就有商户打电话投诉过来，你们的收银系统怎么自动退钱给用户了？于是当晚就坐车去到商家店铺实地考察(这也是第一次去客户驻场)。

现场考察后发现用户出示收款码给商家扫码以后，商家迟迟收不到钱，于是商家提示用户输入一下密码，就这样磨磨唧唧过了 60s 之后，系统提示商户付款失败，请重新扫码付款。 用户输入完密码后则有微信付款成功的界面，用户把这个界面给商家看了之后就走了(这非常的合情合理)，商家也没有管订单失败让用户走了。 直到有一个用户收到退款之后回来找到商家，你怎么退款给我了？

这个 bug 在我看来非常的严重，毕竟是关于到钱的，具体损失了多少钱没有统计过。虽然我的 leader 笑嘻嘻说没关系，习惯就好。但是我依旧非常的自责，没有多久就引咎辞职了(当然辞职也和加班比较多有关)。

---------------------------------------------------

在数据库软件里操作数据，结果不知道什么时候对一张表按了 del ，过一会儿作别的操作的时候 ctrl+s 一起把那张表删除了。。。

---------------------------------------------------

看出来了，大家都是身怀绝技啊

---------------------------------------------------

感觉有些 bug 应该在提测的时候就能发现吧……太恐怖了

---------------------------------------------------

配置中心把生产环境和测试环境数据库密码搞反了，挂了半小时

---------------------------------------------------

delete sometable where id=id

---------------------------------------------------

写 excel 表格求和的时候 sum 少拉一行，记账的时候差点少了二十万，还好第二天发现了

---------------------------------------------------

下午开了个新服务，配置 nginx stream 反向代理，开服务器防火墙。一致访问不了。nginx 没日志。
感觉是防火墙假了，反复重启。
最后，哦，我 nginx 在 docker 里啊。

---------------------------------------------------

update 某个配置表，忘记写 where 条件了……还好有开发给还原了

---------------------------------------------------

看到过其他人的 BUG：
密码如果大于 17 位会给截断，并且没任何提示。
用户注册成功后...输入自己的密码一直提示密码错误，Server 排查很久..一直没找到问题，最后是客户端的问题。

---------------------------------------------------

@zsh2517 #18  <li> => </li>

---------------------------------------------------

@zsh2517 #18 
```
<li> => <li>
```

---------------------------------------------------

@zsh2517 #18 
```html
<li>   </li>
```

---------------------------------------------------

@hiphooray if i=1 这代码压根都跑不起来,而且执行就会报这是第几行的错误,一大帮人找一晚上的 bug?逗呢

---------------------------------------------------

我的一个 BUG 。

``
Order queryOrder(customer); #  查询客户订单，如果有返回客户订单
Order createOrder(customer); #  新建客户订单，创建一个全新的订单并返回
Order fillOrder(orderOld,orderNew);#  客户订单数据填充，如果没有历史订单，就用新的订单，返回填充好数据的订单
``

我的业务代码
``
Order order = fillOrder(queryOrder(customer),createOrder(customer));
``


一个季度后，因支付中心向在狂欢中的业务中心汇报了，成交额稳定，成交率脚踝斩的极限数据，才知道有问题。

---------------------------------------------------

@jiayouzl 我的错我的错！是 C 写的 ROS 程序，那段时间 C 和 Python 混着用，所以记错了。

---------------------------------------------------

@chenalex #87 这个没让测试测吗？测试的锅

---------------------------------------------------

某同事 把用户手机相册内容删掉......

---------------------------------------------------

dev 环境，某些条件下导致条件全无，变为更新全表，吓死宝宝😂

---------------------------------------------------

小弟帮老板干活把甲方 git 服务器给格式化了，幸好当时我请假了，全程没参与

---------------------------------------------------

新公司更新一个批量缴费的功能，条件 id 写错，导致缴费出问题。

---------------------------------------------------

@wu00 #10 我也干过这事...

---------------------------------------------------

@wujichao #11 笑死，哈哈哈哈哈

---------------------------------------------------

同事的 bug ，从上游供应商读取到的全价机票价格和折扣，遍历计算的时候角标错了，商务舱变成了 2 折优惠，比经济舱都便宜。最后老板拍板赔了十几个 w

---------------------------------------------------

@GeekGao #54 哈哈哈哈哈哈哈哈，回复官方：我们在偷偷摸摸做大事！！

---------------------------------------------------

@masterclock #55 还缺人吗？我想去挑战自我...哈哈哈

---------------------------------------------------

@justin2018 #70 可以跟我合作一下，你负责写 bug 和道歉，我负责薅羊毛，最后拿到的好处咱们 55 分，哈哈

---------------------------------------------------

@masterclock 哈哈哈哈，你这工作壁垒有点高啊

---------------------------------------------------

2015 年，做运维，在一个软件外包公司工作（第一份工作）
技术总监发给我一个文件夹，让我把里面的内容替换到线上
我感觉手动执行太累了，于是把意思转达给了另外一个经验丰富的运维大佬，让他给写个脚本，我准备批量执行
后来脚本里面的 cp 命令写错了，本该替换到 B 文件夹的文件，全部强制替换进了 C 文件夹
线上几百个交易系统当时就炸了，整个公司上百号人连续加班两三天才勉强给恢复好

2020 年，做 php 开发，某个活动的购买逻辑本来是正确的，在上线前测试非说购买逻辑写反了，我于是想都没想直接把 = 改成了 !=，上线后大概等了三天才发现这个问题，老板给我发消息，深夜打车回公司修 bug ，公司亏损好几万 RMB ，隔了没多久我就被裁掉了...

2022 年，做 go 开发，把测试环境和正式环境数据库搞混了，把线上环境的某个表清空了... 发现不对劲，5 分钟内就恢复了，弄完后瘫软在凳子上冒冷汗... 幸亏当时用户量不大 且没人发现

...

---------------------------------------------------

以前做 p2p 的时候经常出跟钱的错。

同事 A 付息多付了据说一百万。
同事 B 放款多放了 30 万。
本人重复收了 80 个左右的用户的还款，运营打电话挨个退。

前阵子还出了个啥错来着，已经快想不起来了。只记得早上 9 点被电话叫醒，边补救边抽烟，由于紧张+早上抽烟缺氧，上厕所眼前一晕倒下去了。倒下的时候磕到了眉骨，磕醒了。

---------------------------------------------------

@zsh2517 ide 不会报错？

---------------------------------------------------

某同事 把用户手机相册内容删掉......

---------------------------------------------------

dev 环境，某些条件下导致条件全无，变为更新全表，吓死宝宝😂

---------------------------------------------------

小弟帮老板干活把甲方 git 服务器给格式化了，幸好当时我请假了，全程没参与

---------------------------------------------------

新公司更新一个批量缴费的功能，条件 id 写错，导致缴费出问题。

---------------------------------------------------

@wu00 #10 我也干过这事...

---------------------------------------------------

@wujichao #11 笑死，哈哈哈哈哈

---------------------------------------------------

同事的 bug ，从上游供应商读取到的全价机票价格和折扣，遍历计算的时候角标错了，商务舱变成了 2 折优惠，比经济舱都便宜。最后老板拍板赔了十几个 w

---------------------------------------------------

@GeekGao #54 哈哈哈哈哈哈哈哈，回复官方：我们在偷偷摸摸做大事！！

---------------------------------------------------

@masterclock #55 还缺人吗？我想去挑战自我...哈哈哈

---------------------------------------------------

@justin2018 #70 可以跟我合作一下，你负责写 bug 和道歉，我负责薅羊毛，最后拿到的好处咱们 55 分，哈哈

---------------------------------------------------

@masterclock 哈哈哈哈，你这工作壁垒有点高啊

---------------------------------------------------

2015 年，做运维，在一个软件外包公司工作（第一份工作）
技术总监发给我一个文件夹，让我把里面的内容替换到线上
我感觉手动执行太累了，于是把意思转达给了另外一个经验丰富的运维大佬，让他给写个脚本，我准备批量执行
后来脚本里面的 cp 命令写错了，本该替换到 B 文件夹的文件，全部强制替换进了 C 文件夹
线上几百个交易系统当时就炸了，整个公司上百号人连续加班两三天才勉强给恢复好

2020 年，做 php 开发，某个活动的购买逻辑本来是正确的，在上线前测试非说购买逻辑写反了，我于是想都没想直接把 = 改成了 !=，上线后大概等了三天才发现这个问题，老板给我发消息，深夜打车回公司修 bug ，公司亏损好几万 RMB ，隔了没多久我就被裁掉了...

2022 年，做 go 开发，把测试环境和正式环境数据库搞混了，把线上环境的某个表清空了... 发现不对劲，5 分钟内就恢复了，弄完后瘫软在凳子上冒冷汗... 幸亏当时用户量不大 且没人发现

...

---------------------------------------------------

以前做 p2p 的时候经常出跟钱的错。

同事 A 付息多付了据说一百万。
同事 B 放款多放了 30 万。
本人重复收了 80 个左右的用户的还款，运营打电话挨个退。

前阵子还出了个啥错来着，已经快想不起来了。只记得早上 9 点被电话叫醒，边补救边抽烟，由于紧张+早上抽烟缺氧，上厕所眼前一晕倒下去了。倒下的时候磕到了眉骨，磕醒了。

---------------------------------------------------

@zsh2517 ide 不会报错？

---------------------------------------------------

某同事 把用户手机相册内容删掉......

---------------------------------------------------

dev 环境，某些条件下导致条件全无，变为更新全表，吓死宝宝😂

---------------------------------------------------

小弟帮老板干活把甲方 git 服务器给格式化了，幸好当时我请假了，全程没参与

---------------------------------------------------

新公司更新一个批量缴费的功能，条件 id 写错，导致缴费出问题。

---------------------------------------------------

@wu00 #10 我也干过这事...

---------------------------------------------------

@wujichao #11 笑死，哈哈哈哈哈

---------------------------------------------------

同事的 bug ，从上游供应商读取到的全价机票价格和折扣，遍历计算的时候角标错了，商务舱变成了 2 折优惠，比经济舱都便宜。最后老板拍板赔了十几个 w

---------------------------------------------------

@GeekGao #54 哈哈哈哈哈哈哈哈，回复官方：我们在偷偷摸摸做大事！！

---------------------------------------------------

@masterclock #55 还缺人吗？我想去挑战自我...哈哈哈

---------------------------------------------------

@justin2018 #70 可以跟我合作一下，你负责写 bug 和道歉，我负责薅羊毛，最后拿到的好处咱们 55 分，哈哈

---------------------------------------------------

@masterclock 哈哈哈哈，你这工作壁垒有点高啊

---------------------------------------------------

2015 年，做运维，在一个软件外包公司工作（第一份工作）
技术总监发给我一个文件夹，让我把里面的内容替换到线上
我感觉手动执行太累了，于是把意思转达给了另外一个经验丰富的运维大佬，让他给写个脚本，我准备批量执行
后来脚本里面的 cp 命令写错了，本该替换到 B 文件夹的文件，全部强制替换进了 C 文件夹
线上几百个交易系统当时就炸了，整个公司上百号人连续加班两三天才勉强给恢复好

2020 年，做 php 开发，某个活动的购买逻辑本来是正确的，在上线前测试非说购买逻辑写反了，我于是想都没想直接把 = 改成了 !=，上线后大概等了三天才发现这个问题，老板给我发消息，深夜打车回公司修 bug ，公司亏损好几万 RMB ，隔了没多久我就被裁掉了...

2022 年，做 go 开发，把测试环境和正式环境数据库搞混了，把线上环境的某个表清空了... 发现不对劲，5 分钟内就恢复了，弄完后瘫软在凳子上冒冷汗... 幸亏当时用户量不大 且没人发现

...

---------------------------------------------------

以前做 p2p 的时候经常出跟钱的错。

同事 A 付息多付了据说一百万。
同事 B 放款多放了 30 万。
本人重复收了 80 个左右的用户的还款，运营打电话挨个退。

前阵子还出了个啥错来着，已经快想不起来了。只记得早上 9 点被电话叫醒，边补救边抽烟，由于紧张+早上抽烟缺氧，上厕所眼前一晕倒下去了。倒下的时候磕到了眉骨，磕醒了。

---------------------------------------------------

@zsh2517 ide 不会报错？

