### 怎么证明自己写的代码，是有价值的？

从理智上来说，在公司写的任何代码，都可能被淘汰，只要不是冷门小众行业，总有开源代码做的比你好。未来某一天公司空降一个部门领导，可以很轻易的把陈旧代码一锅端，用全新的开源框架，甚至不同的语言，来适配客户需求。美其名曰：技术重构。

从情感的角度出发，没人愿意自己写了一年，甚至好几年积累的代码，付之东流。

但很多情况下，你又无法证明自己的代码是出色的，无法替代的，这就很迷茫。

当码农最悲哀的一点，就是无法依靠代码去证明自己，只有成功的项目才可以。

---------------------------------------------------

公司项目代码是否有价值，你说了不算，公司领导说了算

所以要自己打磨自己的开源项目，最起码没有人敢对你 bb 说，这项目代码给我重写，你连辩解的机会都没

---------------------------------------------------

转产品经理

---------------------------------------------------

搞开源，有人用就证明有价值。

---------------------------------------------------

代码本来就没有价值，代码实现的功能有价值。

还是上帖的结论：生产工艺本身没有价值，只有你依靠生产工艺实现了不可替代的 feature ，才有价值。

---------------------------------------------------

代码没有价值, 解决问题才有价值

---------------------------------------------------

我靠着我写的代码拿到了工资，这还不算价值吗？你想要什么价值？

---------------------------------------------------

如果不聚焦在功能，而聚焦在代码本身的话，那这只是赛博孔乙己而已。

---------------------------------------------------

可替换的螺丝钉，有什么价值。。

---------------------------------------------------

城墙里的一块砖， 你说它有没有价值？？
在的时候没人多看一眼， 不在的时候，问题来了、

---------------------------------------------------

代码不是加分制，是扣分制。代码质量是存在上限的，并且这个上限严重的受到了产品设计水平的制约。同时，代码的价值是依托于产品或服务对象体现的，其本身没什么价值可言。
脱离单纯的技术视角，从其他维度评价自己生产的价值，坦然接受自己和作品没什么特别的，我觉得挺好。

---------------------------------------------------

我发现一个问题，你混淆了暂时价值和永久价值。

你曾经写的代码，当时领导同意使用了，老板也发工资给你了，代码融进产品里，也有用户使用了，那么当时的代码就是有价值的，问题只是它后来没价值了，它不是永远都有价值。

搞清楚了这点，就不用纠结了，因为大多数职业的劳动成果都只是暂时有价值，比如厨师做菜，这个菜也就刚做出来被吃的时候有价值，吃完这个价值体现就结束了。

---------------------------------------------------

下一家面试你的人， 也只是面试你的技术，思维逻辑。  有成功项目可以锦上添花而已。 
你在成功项目里是摸鱼的角色，下家也不会要的。

---------------------------------------------------

找你写代码是解决业务问题的, 不是考你代码水平

---------------------------------------------------

如果还要证明，那就是没有价值

---------------------------------------------------

有价值的是你，不是代码；脱离业务的代码，写得和诗一样也没多大意义

---------------------------------------------------

代码只有在为用户提供价值的时候，才有价值。

再好的代码，产品下架、服务关停、用户流失，也是一堆二进制垃圾。
再烂的代码，产品上架、服务运行、用户使用，也是有价值的。

所以，做技术的，不要陷入技术思维里面。

---------------------------------------------------

我的理解是，你可以理解成盖房子，房子盖好了，住了很多年。 房子老旧了，重建了新房子。你不能说老房子没有任何意义，毕竟他为你遮风挡雨过一段时间。只不过软件开发技术更新太快，加速了这个进程。
从个人来说，你搬砖和设计，有过这段经历，肯定是有区别的。

---------------------------------------------------

从打工的角度来说，你老板愿意花钱雇你，你的代码就是有价值的。

---------------------------------------------------

比如司机的劳动，他必须正在驾驶，把客人或货物运动到另一个地方，这个过程有价值，一个任务结束，这个“劳动成果”的价值体现就结束了，他只能去接下一个任务，才能再次体现价值，但这次的劳动成果是这次的，与上次无关。

你写代码也一样，你这次写的代码，也许随着产品存活一年、也许存活十年，这段时间内你的代码就一直体现价值，这已经比司机和厨师好太多了。

---------------------------------------------------

有人忽视了一点 

老板给你发工资 : 买的不是你的代码 , 是你的服务

---------------------------------------------------

代码只是工具，能写出代码的人才有价值。

---------------------------------------------------

如果结合建筑工人的劳动成果存续时长来看，可以有更深一层的哲学思考，工人砌一块砖，也许随着建筑物延续一百年，那么，为什么建筑工人的价值体现感还是不强呢？

---------------------------------------------------

@cmdOptionKana 赚钱价值倒是其次，不管用哪一种语言和框架，最后都能靠堆人力，写出赚钱的代码。

我是觉得代码写久了，多少会有那么一点点工匠精神。看着精心构建的代码被历史废弃，心里总是不太舒服的。

当然你也可以说只是麻木的用代码换钱，不追求美学，那也对。

---------------------------------------------------

入门：搞开源。
进阶：做独开。

---------------------------------------------------

如果你的代码没有任何价值，你的公司还给你发公司，这证明了你很有价值

---------------------------------------------------

@tool2d 工匠不是艺术家，工匠精神是指对劳动过程有高要求，比如要求自己的代码写得很优雅，但工匠不会纠结劳动成果的存续，比如工匠做了一把椅子，交给商人卖了，工匠不会关心顾客买回去用多久，而且用多久也与工匠精神无关。

简而言之，如果你是工匠精神的原因，那你关心过程就可以了，写代码的过程中高要求就可以了。而如果你还关心其他事情，那就不是工匠精神的原因，你需要再找找自己有什么别的心理活动、精神需求。

---------------------------------------------------

想那么多干嘛, 有工资就行

---------------------------------------------------

去银行，或者老牌制造业。

几万几万行内都是有价值的。

---------------------------------------------------

给钱就行呗，我愿意重构无数遍

---------------------------------------------------

@tool2d 

如果你追求美学，那就算产品移除了你的代码，也不影响美学的呀，因为你可以保留副本，你可以一辈子随时翻出代码来看，欣赏自己的代码之美。

如果你纠结自己的代码是否被产品继续使用，随着产品广泛传播，甚至延续几百年几千年后还有人用，那么，可能你真正的需求是通过代码来“代偿”自身的永生，本质上是对永生的渴望，而什么工匠、价值、美学都是借口。

---------------------------------------------------

公司给你钱让你写代码,这就说明有价值,还要咋说明?

---------------------------------------------------

1 ，数数自己赚了多少少钱（包含写代码工作领到的工资）
2 ，数数自己的代码被多少人使用

---------------------------------------------------

代码从来不是不可替代的，所以不要从代码角度考虑价值问题。最差也得看代码最终所在的那个产品的价值

---------------------------------------------------

> 在公司写的任何代码，都可能被淘汰
YES ，只是开源代码也一样，淘汰比例更高

> 只要不是冷门小众行业，总有开源代码做的比你好
NO ，除非是热门撞车或者部分利益输送行业，绝大多数公司里的代码随便写写，就没有任何开源代码能替代

> 从情感的角度出发，没人愿意自己写了一年，甚至好几年积累的代码，付之东流
情感角度我不理解（你是谈情说爱写出来的代码还是 XP 就是代码呀），但专业角度来看，不管是自己写的代码不合适业务，还是其他人的代码不合适业务，都应该治理（重构 or 重写），这个过程无论是判断还是落地，都是很考验工程师能力的

> 你又无法证明自己的代码是出色的，无法替代的
不需要证明你的代码，要证明的是你的能力

> 当码农最悲哀的一点，就是无法依靠代码去证明自己，只有成功的项目才可以
成功的项目背后低水平的码农多的是了，失败的项目背后也不一定都是失败的码农

---------------------------------------------------

你码代码不拿工资啊？

---------------------------------------------------

发工资单的时候

---------------------------------------------------

业务相关的代码变化会比较大，一些基础组件的代码变化不大，很多开源项目的代码持续很多年，变化也不大，例如，Nginx 、LVS 。

dperf 只关注四层网络性能测试，比较聚焦，所以代码变化也不大。
如果开源项目被很多人用、点 star 、提 Issue ，说明是有价值的。
https://github.com/baidu/dperf

---------------------------------------------------

不是给你发工资了么

---------------------------------------------------

那不得看写的是啥代码吗？例如 Linus 写的 Linux 和 Git ，这些代码的价值都是毋庸置疑的。
我觉得代码的价值分几个层级：
第一层，自己想写代码，就只是自己想写着玩玩
第二层，能够从无到有实现某个商业产品的功能，能够产生实际的商业价值
第三层，能够影响整个行业的代码
第四层，能够影响整个世界的代码

---------------------------------------------------

我漏了一个最有可能的情况，你真正渴望的可能是别人认同你的代码，别人夸你的代码优雅，够美，别人不舍得移除你的代码。

如果你的需求是这个，那你要的就是虚荣（虽然不好听，但很正常，我也想要虚荣，世上多数人都想要）。这个难度比较大，打工写代码基本没可能实现。

根据这个思路，做开源是对的，比较简单的是去找找新生语言、冷门语言，这种语言通常缺少一大堆第三方库和工具，你抢先去做，大概率会被长期使用，并且得到尊重。

---------------------------------------------------

OP 的话在某种程度上来说是对的。

首先达成一个共识，就是“价值是一种 [商品或服务] 的 [社会属性] ”。

从雇佣关系看，技术（代码）显然是有价值的，企业得到了你的程序，你得到了相应的金钱。

从一般经济活动看，技术的使用价值和交换价值很大程度是体现在事物总价值中的附加价值部分。
问题是，很多企业主体经营不善，所谓皮之不存，毛将焉附。又或者决策者经营理念落后，意识不到经济活动中高附加值的重要性，种种原因使得代码提供的附加价值在社会环境中得不到体现。在这些个限定词下，说代码毫无价值不为过。

至于“无法依靠代码去证明自己”，先明确想要证明什么？“我能行”？“我值得拿高工资”？还是“我有足够的社会价值”？
这个说法就跟下面说法是一样的：

当机师最悲哀的一点，就是无法依靠驾驶技术去证明自己，只有足够的安全记录才可以。
当销售最悲哀的一点，就是无法依靠能言善辩去证明自己，只有足够的销售额才可以。
做科研最悲哀的一点，就是无法依靠严谨实验去证明自己，只有认可的成果才可以。

如果说能力是一种个人的绝对量，那么价值就是在社会中转移的相对量，它受整个自然社会影响。能力与价值只在大数据上有统计意义的相关性。

---------------------------------------------------

估计写个 bug ，有人电话、邮件、上门来骂你

---------------------------------------------------

@cmdOptionKana 国内不是有个非物质文化遗产保护嘛，我就在思考，同样是脑力劳动，为什么代码就不能上升到艺术高度，被后人传承下去。

比如 github 上 10 年或 20 年前的老代码，虽然稍有问津，但有些还是有价值，可以参考借鉴的。可惜公司项目一般是不开源的，留在自己手里只能烂掉。

---------------------------------------------------

工资不就是价值吗

---------------------------------------------------

有客户报告 bug

---------------------------------------------------

有人用，能挣钱，能给你带来收获感不都是价值么

---------------------------------------------------

想想计算机至诞生以来，什么代码是最有价值的？

可能工具性的代码如果做得很好，会被比较长久的使用，那就有使用价值，比如 mysql, nginx, unix 系统, linux 系统

不过站在搞钱的角度来看，感觉站长的观点就很不错 /help/spam

---------------------------------------------------

https://v2ex.com/help/spam

---------------------------------------------------

写代码不是写诗写文章，是和机器对话。
淘汰的产品代码要什么价值？我办厂买的机器难不成还过时了还要硬留着用吗。
都是工业时代流水线产品。
真正有价值的也是代码内含的思维和数理逻辑。
你想有价值就形成自己的标准或者理论著书立作、
亦或者参与开源项目为人类共同发展贡献一些力量吧。

在资本经济里人本身就是商品，代码和计算机只是生产工具。
如果抱着你的金代码不放肯定是会被 AI 拍死在沙滩上的。
与其悲哀不如趁着春色正好出门踏春，陪陪家人孩子。

写着又想到了一些，ChatGPT 够成功吧；
我好奇 ChatGPT 用到的 Transformer 模型技术的作者现在都在干嘛。
我记得这个模型是在《 Attention Is All You Need 》里提出，
搜了一下论文是 2017 年 Google 的几位研究人员发表的，
这里正好总结的有这些人的经历：
https://www.ithome.com/0/699/973.htm
你可以看看这些大牛们现在都在干嘛。
至于 OpenAI 普通员工们的工作和经历你可以自己试着搜一搜。

---------------------------------------------------

所以工作分为两类，一类是大部分劳动可以积累到自己身上的，一类是劳动成果只能间接或者少量积累到自己身上的。
前者工作包含：医生、律师、老师、理发师、设计师、博主，这类人利用平台完成劳动价值的传递，客户更认的是你这个人，有可能跟着你换平台。
后者工作包含：流水线工人、银行柜员，这类人依附平台工作，交付产品更加标准化。昨天的辛苦和成果无法作为今天背书。
总结就是，工业化之前就存在的职业，大部分属于第一类。工业化之后出现的职业，大部分属于第二类。不绝对，光谱也连续的。

---------------------------------------------------

这个问题可以泛化为,如何证明劳动的价值?劳动是否有价值?

目前的结论:
劳动有价值
劳动价值无法量化和精准衡量
而且同样的劳动对不同用户的价值也是不一样的


还原到代码也是一样的,不用证明,代码有价值,但是对用户的价值取决于具体产品和使用场景,量化也很简单,看给公司收入或者给用户带来的收益即可

---------------------------------------------------

业务代码哪来的开源项目，能让用户正常用就是有价值了

---------------------------------------------------

狗屁价值，公司给钱就行

---------------------------------------------------

德国社会学家埃米尔·杜尔凯姆（Émile Durkheim ）在 19 世纪末和 20 世纪初的著作中探讨了社会分工对个人价值的影响，并提出了以下的观点。

现代社会的特点之一是分工的高度细化和专业化。这种细分导致了个人在社会中的角色越来越狭窄，只负责生产过程中的一小部分环节或任务。个人的工作变得高度专门化，而对整个生产过程的认知和了解则变得有限。这使得个人难以看到自己在整个社会系统中的价值和贡献。

杜尔凯姆认为，人们对自己的工作价值的认知通常是通过社会的反馈和认可来建立的。在传统的社会中，人们从事的工作往往与社会的需求和价值密切相关，他们能够直接看到自己的劳动对社会的影响和贡献。然而，在现代社会中，由于分工的细化和复杂性，个人很难直接感知到自己的工作对整个社会的意义。

因此，杜尔凯姆认为，现代社会中个人价值的缩小主要是由于社会分工的细化和专业化所导致的。个人所从事的工作越来越狭窄，他们很难从整体上认识到自己的工作对社会的重要性。这种局面可能导致个人的存在感和满足感下降，因为他们缺乏对自己工作的整体意义的直观认知。

需要注意的是，这种观念并非完全否定个人的价值，而是强调了现代社会分工对个人认知和体验的影响。个人在现代社会中仍然扮演着重要的角色，但他们的劳动价值可能更加隐蔽和间接，需要通过整个社会系统的相互依赖和反馈来体现。

---------------------------------------------------

公司没给你发工资吗?

---------------------------------------------------

给你发工资了吗？ 工资条就是证明

---------------------------------------------------

给钱就干呗，要啥自行车啊！

至少有一半的程序员是为钱才干这一行的，并不是喜欢写代码，你靠着自己的代码换取了劳动报酬，这就是最大的价值。

---------------------------------------------------

@amon 正确的, 所以说代码的价值, 在于业务的价值

---------------------------------------------------

记住：代码是为业务服务的，没得业务的盈利和支持，哪里来钱请程序员写代码？

---------------------------------------------------

如果主管不懂技术的话，我看到厉害的人是这样做的。
先把问题拆分，1 ，2 ，3 ，把自己要做的地方讲成最关键的地方。
总有开源代码比你好？那就 copy paste 嘛。
然后弄一个 demo ，找很多人来看，声明这个项目最关键的问题已经解决。然后把“收尾”工作推给小弟，自己再去搞下一个“关键”问题。
这样就能拿很多赞美，出问题了责任也是小弟的。

---------------------------------------------------

建议从工资的角度出发考虑。你的代码在发工资的瞬间已经变现完成，至于怎么用是公司的问题

---------------------------------------------------

不谈代码，我只知道一个道理，永远不要自证清白
你说我的代码没价值，好，那这套系统就停止维护

---------------------------------------------------

给你发工资就证明了价值

---------------------------------------------------

实现了需求，解决了问题，帮助了他人，不就是价值？
从大的层面，帮公司生产出产品，不是价值？

---------------------------------------------------

公司付我钱来写代码，那对我来说就是有价值的
至于对公司对社会对人类有没有价值我不管

---------------------------------------------------

公司就工资，个人就产品付费情况，情怀就 GitHub star

---------------------------------------------------

这对搞量化的来说太好证明了 pnl 就是最好的证据 在正常情况能不能赚钱 在异常情况能不能少亏

---------------------------------------------------

代码本就是工具，有新的、效率更高的代码出现，从而淘汰旧的代码，这本就是进步的表现，为什么要感到不快呢？你应该做到的是，只要是这个业务方向的代码，我的永远是最好的、效率最高的，如果不是，你就应该被淘汰。这就是这个行业的规律。

---------------------------------------------------

你设计出设计模式你才不被取代，它代表你对业务理解充分尝试过不同方案最后得到几个经过验证的方案。

---------------------------------------------------

线上业务写一大堆 bug ，给老板来个下马威

---------------------------------------------------

你把项目上你写的代码删了, 没有找你就是没价值

---------------------------------------------------

代码稳定的实现了业务。且易于迭代和维护。这就是价值。

---------------------------------------------------

你代码出一次业务问题。你的价值就体现出来了。你出去就可以大胆的说：我曾经导致公司业务停摆，造成几百万损失。

---------------------------------------------------

你的代码是否有价值，最简单的体现就是业务量。由你的代码所组成的产品，获得了什么样的市场成功。这是代码价值的体现。

你写的像花一样，但是产品没一个人用，也没用。

---------------------------------------------------

- 对用户来说, 好用就是有价值的
- 对老板来说, 能带来收益就是有价值的
- 对同事来说, 你写的代码能看懂易于维护就是有价值的
- 对项目来说, 你写的代码难以维护了, 促成重构了也是价值的体现

单从代码的层面来说, 通过写代码让自己的水平不断提升才是价值的提现

---------------------------------------------------

代码写的有问题, 导致活动当天活动没上去 ,广告费血亏 .亏的广告费就是我的价值 哈哈哈

---------------------------------------------------

我在芯片行业做编译优化工作，能够轻而易举的证明代码的价值。

比如我通过分析 SPEC 考题的代码，结合芯片的体系结构成功找到一个可以优化的点，并且给 GCC 编译器打上优化补丁，使得芯片的跑分提高了 1 分，那我写的代码太有价值了。

---------------------------------------------------

当码农最悲哀的一点，就是无法依靠代码去证明自己，都是 api 搬运工证明啥？？

---------------------------------------------------

很简单，删光了看有没有人找你麻烦就行了 /手动狗头

---------------------------------------------------

大学带我做项目的老师跟我说过，一个技术人员的价值体现在与是否能解决问题，甚至是否能解决其他人解决不了的问题。

---------------------------------------------------

你看房价高不高，钢筋混凝土的成本又有多高？

同理，代码（类比钢筋混凝土）本身也没有多高的价值，有价值的是代码所承载的东西。

这个东西可以是产品、业务（类比商品房），也可以是底层的算法、设计思想（支持房子不倒的物理学、工程学原理），等等……

作为程序员，想要提高自己的劳动所产生的价值，就要往这两个方向提高。如果拘泥于舒适圈止步不前，那可能就停留在“码农”的体力劳动价值了（这里甚至不想类比建筑工人，因为建筑工人很多都能干到四五十岁，而一线码农难以做到）。

----

前东家 CTO 的工作签名是“code is cheap, show me the talk”。和 Linus 的名言相比，听起来或许有些讽刺，但并非全无道理。

---------------------------------------------------

第一年写了段代码，部门损失 2w 多，这就叫价值

---------------------------------------------------

虽然我写的很烂
但是公司给我工资了
所以还是有点价值的
🐶

---------------------------------------------------

码农作为商业组织中的生产一环，没有直接将软件成本转化为收益，如果你恰巧是一个营销、销售专家又懂市场，那么恭喜你，你拥有了将成本转化成收益的能力，不巧，大多数编写程序的人，不具备或没有一个这方面的人打配合，因为你或你队友厉害，你们获得了物资上的财富，取得了世俗上的成功，你证明了自己也证明了代码。

想起钢铁侠的一句话：是钢铁侠成就了我？还是我成就了钢铁侠？

---------------------------------------------------

楼上有几位不要搞错了。企业雇佣你，不是你的代码有价值，是你的劳动力有价值。
你的代码有价值意味着你不可替代。你的劳动力有价值意味着你可以被替代。

---------------------------------------------------

把你的代码做成产品，有人付钱，付了多少钱说明你的代码有多少价值，其他都是扯淡。

---------------------------------------------------

当你做的产品有人买，有人用，这就说明你做的有价值 有成就感。当然有没有人用不是开发一个人决定的，大多数是产品的问题。 其实每天公司付你薪水写代码，你已经在创造价值了。

---------------------------------------------------

@tool2d 

> 国内不是有个非物质文化遗产保护嘛，我就在思考，同样是脑力劳动，为什么代码就不能上升到艺术高度，被后人传承下去

本质上是可以的，不存在原则性的阻碍。

但具体操作不容易操作，你说是把 “一切代码” 称为一种非物质文化遗产，还是选择某个软件或某个作者的代码称为非物质文化遗产？这个怎么操作？

另外，文化遗产可以脱离功能、功用，就是它没用也能供起来欣赏，但代码一旦失去功能、功用，再去说它多么优雅，那是对代码的侮辱啊，“你这段代码很优雅，但是没用，不符合时代需求，要人为地保护起来，作为一个没用的东西来欣赏”，如果你是作者，你真的想要这种虚荣？小心捧杀，抬得越高，摔得越惨。

---------------------------------------------------

看价值观吧，不同的事情在不同的人看来，价值多少都不一样。结果可以有价值，过程也可以有价值。

---------------------------------------------------

如果我写的代码容易阅读调试，同时写的过程中还提升了自己的水平，那就是对自己有价值，如果写的代码，容易维护，就是对维护的人有价值。对我来说，这样就足够了。

---------------------------------------------------

月薪 10 万，你让我天天只写 print 都行

---------------------------------------------------

换你也这么想啊。

屎山代码，不断堆积。但对应 App 让你挣了不少钱，虽然臭，各种魔数，版本判断，你还是不断维护，不断升级。甚至功能都不大敢砍。

新项目，醉心其中，反复优化，各种动效。上架后无人问津，限免都没人理。

到这一步其实结果如何自己无论如何都能接受了，好歹是自己的代码自己挣。

换成你给“公司”开发，这和工地上堆水泥的工人有何区别？你的价值都要以别人的眼光为准。

---------------------------------------------------

我觉得一楼正解

---------------------------------------------------

如果需要证明说明没价值

---------------------------------------------------

你看房价高不高，钢筋混凝土的成本又有多高？

同理，代码（类比钢筋混凝土）本身也没有多高的价值，有价值的是代码所承载的东西。

这个东西可以是产品、业务（类比商品房），也可以是底层的算法、设计思想（支持房子不倒的物理学、工程学原理），等等……

作为程序员，想要提高自己的劳动所产生的价值，就要往这两个方向提高。如果拘泥于舒适圈止步不前，那可能就停留在“码农”的体力劳动价值了（这里甚至不想类比建筑工人，因为建筑工人很多都能干到四五十岁，而一线码农难以做到）。

----

前东家 CTO 的工作签名是“code is cheap, show me the talk”。和 Linus 的名言相比，听起来或许有些讽刺，但并非全无道理。

---------------------------------------------------

第一年写了段代码，部门损失 2w 多，这就叫价值

---------------------------------------------------

虽然我写的很烂
但是公司给我工资了
所以还是有点价值的
🐶

---------------------------------------------------

码农作为商业组织中的生产一环，没有直接将软件成本转化为收益，如果你恰巧是一个营销、销售专家又懂市场，那么恭喜你，你拥有了将成本转化成收益的能力，不巧，大多数编写程序的人，不具备或没有一个这方面的人打配合，因为你或你队友厉害，你们获得了物资上的财富，取得了世俗上的成功，你证明了自己也证明了代码。

想起钢铁侠的一句话：是钢铁侠成就了我？还是我成就了钢铁侠？

---------------------------------------------------

楼上有几位不要搞错了。企业雇佣你，不是你的代码有价值，是你的劳动力有价值。
你的代码有价值意味着你不可替代。你的劳动力有价值意味着你可以被替代。

---------------------------------------------------

把你的代码做成产品，有人付钱，付了多少钱说明你的代码有多少价值，其他都是扯淡。

---------------------------------------------------

当你做的产品有人买，有人用，这就说明你做的有价值 有成就感。当然有没有人用不是开发一个人决定的，大多数是产品的问题。 其实每天公司付你薪水写代码，你已经在创造价值了。

---------------------------------------------------

@tool2d 

> 国内不是有个非物质文化遗产保护嘛，我就在思考，同样是脑力劳动，为什么代码就不能上升到艺术高度，被后人传承下去

本质上是可以的，不存在原则性的阻碍。

但具体操作不容易操作，你说是把 “一切代码” 称为一种非物质文化遗产，还是选择某个软件或某个作者的代码称为非物质文化遗产？这个怎么操作？

另外，文化遗产可以脱离功能、功用，就是它没用也能供起来欣赏，但代码一旦失去功能、功用，再去说它多么优雅，那是对代码的侮辱啊，“你这段代码很优雅，但是没用，不符合时代需求，要人为地保护起来，作为一个没用的东西来欣赏”，如果你是作者，你真的想要这种虚荣？小心捧杀，抬得越高，摔得越惨。

---------------------------------------------------

看价值观吧，不同的事情在不同的人看来，价值多少都不一样。结果可以有价值，过程也可以有价值。

---------------------------------------------------

如果我写的代码容易阅读调试，同时写的过程中还提升了自己的水平，那就是对自己有价值，如果写的代码，容易维护，就是对维护的人有价值。对我来说，这样就足够了。

---------------------------------------------------

月薪 10 万，你让我天天只写 print 都行

---------------------------------------------------

换你也这么想啊。

屎山代码，不断堆积。但对应 App 让你挣了不少钱，虽然臭，各种魔数，版本判断，你还是不断维护，不断升级。甚至功能都不大敢砍。

新项目，醉心其中，反复优化，各种动效。上架后无人问津，限免都没人理。

到这一步其实结果如何自己无论如何都能接受了，好歹是自己的代码自己挣。

换成你给“公司”开发，这和工地上堆水泥的工人有何区别？你的价值都要以别人的眼光为准。

---------------------------------------------------

我觉得一楼正解

---------------------------------------------------

如果需要证明说明没价值

---------------------------------------------------

你看房价高不高，钢筋混凝土的成本又有多高？

同理，代码（类比钢筋混凝土）本身也没有多高的价值，有价值的是代码所承载的东西。

这个东西可以是产品、业务（类比商品房），也可以是底层的算法、设计思想（支持房子不倒的物理学、工程学原理），等等……

作为程序员，想要提高自己的劳动所产生的价值，就要往这两个方向提高。如果拘泥于舒适圈止步不前，那可能就停留在“码农”的体力劳动价值了（这里甚至不想类比建筑工人，因为建筑工人很多都能干到四五十岁，而一线码农难以做到）。

----

前东家 CTO 的工作签名是“code is cheap, show me the talk”。和 Linus 的名言相比，听起来或许有些讽刺，但并非全无道理。

---------------------------------------------------

第一年写了段代码，部门损失 2w 多，这就叫价值

---------------------------------------------------

虽然我写的很烂
但是公司给我工资了
所以还是有点价值的
🐶

---------------------------------------------------

码农作为商业组织中的生产一环，没有直接将软件成本转化为收益，如果你恰巧是一个营销、销售专家又懂市场，那么恭喜你，你拥有了将成本转化成收益的能力，不巧，大多数编写程序的人，不具备或没有一个这方面的人打配合，因为你或你队友厉害，你们获得了物资上的财富，取得了世俗上的成功，你证明了自己也证明了代码。

想起钢铁侠的一句话：是钢铁侠成就了我？还是我成就了钢铁侠？

---------------------------------------------------

楼上有几位不要搞错了。企业雇佣你，不是你的代码有价值，是你的劳动力有价值。
你的代码有价值意味着你不可替代。你的劳动力有价值意味着你可以被替代。

---------------------------------------------------

把你的代码做成产品，有人付钱，付了多少钱说明你的代码有多少价值，其他都是扯淡。

---------------------------------------------------

当你做的产品有人买，有人用，这就说明你做的有价值 有成就感。当然有没有人用不是开发一个人决定的，大多数是产品的问题。 其实每天公司付你薪水写代码，你已经在创造价值了。

---------------------------------------------------

@tool2d 

> 国内不是有个非物质文化遗产保护嘛，我就在思考，同样是脑力劳动，为什么代码就不能上升到艺术高度，被后人传承下去

本质上是可以的，不存在原则性的阻碍。

但具体操作不容易操作，你说是把 “一切代码” 称为一种非物质文化遗产，还是选择某个软件或某个作者的代码称为非物质文化遗产？这个怎么操作？

另外，文化遗产可以脱离功能、功用，就是它没用也能供起来欣赏，但代码一旦失去功能、功用，再去说它多么优雅，那是对代码的侮辱啊，“你这段代码很优雅，但是没用，不符合时代需求，要人为地保护起来，作为一个没用的东西来欣赏”，如果你是作者，你真的想要这种虚荣？小心捧杀，抬得越高，摔得越惨。

---------------------------------------------------

看价值观吧，不同的事情在不同的人看来，价值多少都不一样。结果可以有价值，过程也可以有价值。

---------------------------------------------------

如果我写的代码容易阅读调试，同时写的过程中还提升了自己的水平，那就是对自己有价值，如果写的代码，容易维护，就是对维护的人有价值。对我来说，这样就足够了。

---------------------------------------------------

月薪 10 万，你让我天天只写 print 都行

---------------------------------------------------

换你也这么想啊。

屎山代码，不断堆积。但对应 App 让你挣了不少钱，虽然臭，各种魔数，版本判断，你还是不断维护，不断升级。甚至功能都不大敢砍。

新项目，醉心其中，反复优化，各种动效。上架后无人问津，限免都没人理。

到这一步其实结果如何自己无论如何都能接受了，好歹是自己的代码自己挣。

换成你给“公司”开发，这和工地上堆水泥的工人有何区别？你的价值都要以别人的眼光为准。

---------------------------------------------------

我觉得一楼正解

---------------------------------------------------

如果需要证明说明没价值

---------------------------------------------------

你看房价高不高，钢筋混凝土的成本又有多高？

同理，代码（类比钢筋混凝土）本身也没有多高的价值，有价值的是代码所承载的东西。

这个东西可以是产品、业务（类比商品房），也可以是底层的算法、设计思想（支持房子不倒的物理学、工程学原理），等等……

作为程序员，想要提高自己的劳动所产生的价值，就要往这两个方向提高。如果拘泥于舒适圈止步不前，那可能就停留在“码农”的体力劳动价值了（这里甚至不想类比建筑工人，因为建筑工人很多都能干到四五十岁，而一线码农难以做到）。

----

前东家 CTO 的工作签名是“code is cheap, show me the talk”。和 Linus 的名言相比，听起来或许有些讽刺，但并非全无道理。

---------------------------------------------------

第一年写了段代码，部门损失 2w 多，这就叫价值

---------------------------------------------------

虽然我写的很烂
但是公司给我工资了
所以还是有点价值的
🐶

---------------------------------------------------

码农作为商业组织中的生产一环，没有直接将软件成本转化为收益，如果你恰巧是一个营销、销售专家又懂市场，那么恭喜你，你拥有了将成本转化成收益的能力，不巧，大多数编写程序的人，不具备或没有一个这方面的人打配合，因为你或你队友厉害，你们获得了物资上的财富，取得了世俗上的成功，你证明了自己也证明了代码。

想起钢铁侠的一句话：是钢铁侠成就了我？还是我成就了钢铁侠？

---------------------------------------------------

楼上有几位不要搞错了。企业雇佣你，不是你的代码有价值，是你的劳动力有价值。
你的代码有价值意味着你不可替代。你的劳动力有价值意味着你可以被替代。

---------------------------------------------------

把你的代码做成产品，有人付钱，付了多少钱说明你的代码有多少价值，其他都是扯淡。

---------------------------------------------------

当你做的产品有人买，有人用，这就说明你做的有价值 有成就感。当然有没有人用不是开发一个人决定的，大多数是产品的问题。 其实每天公司付你薪水写代码，你已经在创造价值了。

---------------------------------------------------

@tool2d 

> 国内不是有个非物质文化遗产保护嘛，我就在思考，同样是脑力劳动，为什么代码就不能上升到艺术高度，被后人传承下去

本质上是可以的，不存在原则性的阻碍。

但具体操作不容易操作，你说是把 “一切代码” 称为一种非物质文化遗产，还是选择某个软件或某个作者的代码称为非物质文化遗产？这个怎么操作？

另外，文化遗产可以脱离功能、功用，就是它没用也能供起来欣赏，但代码一旦失去功能、功用，再去说它多么优雅，那是对代码的侮辱啊，“你这段代码很优雅，但是没用，不符合时代需求，要人为地保护起来，作为一个没用的东西来欣赏”，如果你是作者，你真的想要这种虚荣？小心捧杀，抬得越高，摔得越惨。

---------------------------------------------------

看价值观吧，不同的事情在不同的人看来，价值多少都不一样。结果可以有价值，过程也可以有价值。

---------------------------------------------------

如果我写的代码容易阅读调试，同时写的过程中还提升了自己的水平，那就是对自己有价值，如果写的代码，容易维护，就是对维护的人有价值。对我来说，这样就足够了。

---------------------------------------------------

月薪 10 万，你让我天天只写 print 都行

---------------------------------------------------

换你也这么想啊。

屎山代码，不断堆积。但对应 App 让你挣了不少钱，虽然臭，各种魔数，版本判断，你还是不断维护，不断升级。甚至功能都不大敢砍。

新项目，醉心其中，反复优化，各种动效。上架后无人问津，限免都没人理。

到这一步其实结果如何自己无论如何都能接受了，好歹是自己的代码自己挣。

换成你给“公司”开发，这和工地上堆水泥的工人有何区别？你的价值都要以别人的眼光为准。

---------------------------------------------------

我觉得一楼正解

---------------------------------------------------

如果需要证明说明没价值

---------------------------------------------------

你看房价高不高，钢筋混凝土的成本又有多高？

同理，代码（类比钢筋混凝土）本身也没有多高的价值，有价值的是代码所承载的东西。

这个东西可以是产品、业务（类比商品房），也可以是底层的算法、设计思想（支持房子不倒的物理学、工程学原理），等等……

作为程序员，想要提高自己的劳动所产生的价值，就要往这两个方向提高。如果拘泥于舒适圈止步不前，那可能就停留在“码农”的体力劳动价值了（这里甚至不想类比建筑工人，因为建筑工人很多都能干到四五十岁，而一线码农难以做到）。

----

前东家 CTO 的工作签名是“code is cheap, show me the talk”。和 Linus 的名言相比，听起来或许有些讽刺，但并非全无道理。

---------------------------------------------------

第一年写了段代码，部门损失 2w 多，这就叫价值

---------------------------------------------------

虽然我写的很烂
但是公司给我工资了
所以还是有点价值的
🐶

---------------------------------------------------

码农作为商业组织中的生产一环，没有直接将软件成本转化为收益，如果你恰巧是一个营销、销售专家又懂市场，那么恭喜你，你拥有了将成本转化成收益的能力，不巧，大多数编写程序的人，不具备或没有一个这方面的人打配合，因为你或你队友厉害，你们获得了物资上的财富，取得了世俗上的成功，你证明了自己也证明了代码。

想起钢铁侠的一句话：是钢铁侠成就了我？还是我成就了钢铁侠？

---------------------------------------------------

楼上有几位不要搞错了。企业雇佣你，不是你的代码有价值，是你的劳动力有价值。
你的代码有价值意味着你不可替代。你的劳动力有价值意味着你可以被替代。

---------------------------------------------------

把你的代码做成产品，有人付钱，付了多少钱说明你的代码有多少价值，其他都是扯淡。

---------------------------------------------------

当你做的产品有人买，有人用，这就说明你做的有价值 有成就感。当然有没有人用不是开发一个人决定的，大多数是产品的问题。 其实每天公司付你薪水写代码，你已经在创造价值了。

---------------------------------------------------

@tool2d 

> 国内不是有个非物质文化遗产保护嘛，我就在思考，同样是脑力劳动，为什么代码就不能上升到艺术高度，被后人传承下去

本质上是可以的，不存在原则性的阻碍。

但具体操作不容易操作，你说是把 “一切代码” 称为一种非物质文化遗产，还是选择某个软件或某个作者的代码称为非物质文化遗产？这个怎么操作？

另外，文化遗产可以脱离功能、功用，就是它没用也能供起来欣赏，但代码一旦失去功能、功用，再去说它多么优雅，那是对代码的侮辱啊，“你这段代码很优雅，但是没用，不符合时代需求，要人为地保护起来，作为一个没用的东西来欣赏”，如果你是作者，你真的想要这种虚荣？小心捧杀，抬得越高，摔得越惨。

---------------------------------------------------

看价值观吧，不同的事情在不同的人看来，价值多少都不一样。结果可以有价值，过程也可以有价值。

---------------------------------------------------

如果我写的代码容易阅读调试，同时写的过程中还提升了自己的水平，那就是对自己有价值，如果写的代码，容易维护，就是对维护的人有价值。对我来说，这样就足够了。

---------------------------------------------------

月薪 10 万，你让我天天只写 print 都行

---------------------------------------------------

换你也这么想啊。

屎山代码，不断堆积。但对应 App 让你挣了不少钱，虽然臭，各种魔数，版本判断，你还是不断维护，不断升级。甚至功能都不大敢砍。

新项目，醉心其中，反复优化，各种动效。上架后无人问津，限免都没人理。

到这一步其实结果如何自己无论如何都能接受了，好歹是自己的代码自己挣。

换成你给“公司”开发，这和工地上堆水泥的工人有何区别？你的价值都要以别人的眼光为准。

---------------------------------------------------

我觉得一楼正解

---------------------------------------------------

如果需要证明说明没价值

---------------------------------------------------

你看房价高不高，钢筋混凝土的成本又有多高？

同理，代码（类比钢筋混凝土）本身也没有多高的价值，有价值的是代码所承载的东西。

这个东西可以是产品、业务（类比商品房），也可以是底层的算法、设计思想（支持房子不倒的物理学、工程学原理），等等……

作为程序员，想要提高自己的劳动所产生的价值，就要往这两个方向提高。如果拘泥于舒适圈止步不前，那可能就停留在“码农”的体力劳动价值了（这里甚至不想类比建筑工人，因为建筑工人很多都能干到四五十岁，而一线码农难以做到）。

----

前东家 CTO 的工作签名是“code is cheap, show me the talk”。和 Linus 的名言相比，听起来或许有些讽刺，但并非全无道理。

---------------------------------------------------

第一年写了段代码，部门损失 2w 多，这就叫价值

---------------------------------------------------

虽然我写的很烂
但是公司给我工资了
所以还是有点价值的
🐶

---------------------------------------------------

码农作为商业组织中的生产一环，没有直接将软件成本转化为收益，如果你恰巧是一个营销、销售专家又懂市场，那么恭喜你，你拥有了将成本转化成收益的能力，不巧，大多数编写程序的人，不具备或没有一个这方面的人打配合，因为你或你队友厉害，你们获得了物资上的财富，取得了世俗上的成功，你证明了自己也证明了代码。

想起钢铁侠的一句话：是钢铁侠成就了我？还是我成就了钢铁侠？

---------------------------------------------------

楼上有几位不要搞错了。企业雇佣你，不是你的代码有价值，是你的劳动力有价值。
你的代码有价值意味着你不可替代。你的劳动力有价值意味着你可以被替代。

---------------------------------------------------

把你的代码做成产品，有人付钱，付了多少钱说明你的代码有多少价值，其他都是扯淡。

---------------------------------------------------

当你做的产品有人买，有人用，这就说明你做的有价值 有成就感。当然有没有人用不是开发一个人决定的，大多数是产品的问题。 其实每天公司付你薪水写代码，你已经在创造价值了。

---------------------------------------------------

@tool2d 

> 国内不是有个非物质文化遗产保护嘛，我就在思考，同样是脑力劳动，为什么代码就不能上升到艺术高度，被后人传承下去

本质上是可以的，不存在原则性的阻碍。

但具体操作不容易操作，你说是把 “一切代码” 称为一种非物质文化遗产，还是选择某个软件或某个作者的代码称为非物质文化遗产？这个怎么操作？

另外，文化遗产可以脱离功能、功用，就是它没用也能供起来欣赏，但代码一旦失去功能、功用，再去说它多么优雅，那是对代码的侮辱啊，“你这段代码很优雅，但是没用，不符合时代需求，要人为地保护起来，作为一个没用的东西来欣赏”，如果你是作者，你真的想要这种虚荣？小心捧杀，抬得越高，摔得越惨。

---------------------------------------------------

看价值观吧，不同的事情在不同的人看来，价值多少都不一样。结果可以有价值，过程也可以有价值。

---------------------------------------------------

如果我写的代码容易阅读调试，同时写的过程中还提升了自己的水平，那就是对自己有价值，如果写的代码，容易维护，就是对维护的人有价值。对我来说，这样就足够了。

---------------------------------------------------

月薪 10 万，你让我天天只写 print 都行

---------------------------------------------------

换你也这么想啊。

屎山代码，不断堆积。但对应 App 让你挣了不少钱，虽然臭，各种魔数，版本判断，你还是不断维护，不断升级。甚至功能都不大敢砍。

新项目，醉心其中，反复优化，各种动效。上架后无人问津，限免都没人理。

到这一步其实结果如何自己无论如何都能接受了，好歹是自己的代码自己挣。

换成你给“公司”开发，这和工地上堆水泥的工人有何区别？你的价值都要以别人的眼光为准。

---------------------------------------------------

我觉得一楼正解

---------------------------------------------------

如果需要证明说明没价值

